/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package ezcanteen1;

import java.awt.Color;
import java.awt.Frame;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.awt.print.PrinterException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.*;

/**
 *
 * @author Windows
 */
public class MainGUI extends javax.swing.JFrame {

    /**
     * Creates new form MainGUI
     */
    String types;
    int amt=0,val = 0,len;
    int count=0;
    int pass;
    int qty1=10,qty2=10;
    
    int rep_amt;
    char c;
     Connection con = null;
        ResultSet rs = null;
        PreparedStatement ps=null;
    
    public MainGUI() {
        initComponents();
        con=Concls.dbconnect();
        this.setSize(1370,708);
           jTextArea1.setVisible(false);
        billboard.repaint();
        billboard.revalidate();
        Color c =new Color(255,255,255);
        this.getContentPane().setBackground(c);
        Student.setSelected(true);
        
        Base.removeAll();
         Base.repaint();
         Base.revalidate();
        
        Base.add(Menu);
         Base.repaint();
         Base.revalidate();
         setStatus();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel24 = new javax.swing.JLabel();
        jLabel131 = new javax.swing.JLabel();
        jTextField2 = new javax.swing.JTextField();
        jLabel132 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jLabel133 = new javax.swing.JLabel();
        bill_gen = new javax.swing.JTextField();
        jLabel134 = new javax.swing.JLabel();
        jLabel135 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        print = new javax.swing.JLabel();
        jLabel137 = new javax.swing.JLabel();
        jLabel90 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel26 = new javax.swing.JLabel();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        SidePanel = new javax.swing.JPanel();
        acc_sett = new javax.swing.JLabel();
        Main_menu = new javax.swing.JLabel();
        logout = new javax.swing.JLabel();
        Recharge = new javax.swing.JLabel();
        close1 = new javax.swing.JLabel();
        billboard = new javax.swing.JPanel();
        g_total = new javax.swing.JLabel();
        jLabel51 = new javax.swing.JLabel();
        jSeparator2 = new javax.swing.JSeparator();
        main6 = new javax.swing.JLabel();
        main5 = new javax.swing.JLabel();
        main4 = new javax.swing.JLabel();
        main3 = new javax.swing.JLabel();
        main2 = new javax.swing.JLabel();
        main1 = new javax.swing.JLabel();
        jLabel50 = new javax.swing.JLabel();
        jLabel49 = new javax.swing.JLabel();
        label2 = new javax.swing.JLabel();
        clear = new javax.swing.JLabel();
        gen_bill = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        c1 = new javax.swing.JLabel();
        p1 = new javax.swing.JLabel();
        t1 = new javax.swing.JLabel();
        p01 = new javax.swing.JLabel();
        c2 = new javax.swing.JLabel();
        p2 = new javax.swing.JLabel();
        t2 = new javax.swing.JLabel();
        c3 = new javax.swing.JLabel();
        p3 = new javax.swing.JLabel();
        t3 = new javax.swing.JLabel();
        c4 = new javax.swing.JLabel();
        p4 = new javax.swing.JLabel();
        c5 = new javax.swing.JLabel();
        c6 = new javax.swing.JLabel();
        p5 = new javax.swing.JLabel();
        p6 = new javax.swing.JLabel();
        t4 = new javax.swing.JLabel();
        t5 = new javax.swing.JLabel();
        t6 = new javax.swing.JLabel();
        jLabel39 = new javax.swing.JLabel();
        Base = new javax.swing.JPanel();
        Create_Acc = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        card_num = new javax.swing.JTextField();
        department = new javax.swing.JComboBox();
        year = new javax.swing.JComboBox();
        deposit = new javax.swing.JComboBox();
        back = new javax.swing.JLabel();
        create = new javax.swing.JLabel();
        jLabel147 = new javax.swing.JLabel();
        jLabel164 = new javax.swing.JLabel();
        Student = new javax.swing.JRadioButton();
        staff = new javax.swing.JRadioButton();
        Delete_Acc = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        name1 = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        card_number = new javax.swing.JTextField();
        delete = new javax.swing.JLabel();
        jLabel145 = new javax.swing.JLabel();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel119 = new javax.swing.JLabel();
        year1 = new javax.swing.JComboBox();
        del_mul = new javax.swing.JLabel();
        Deduct_amt = new javax.swing.JPanel();
        jLabel136 = new javax.swing.JLabel();
        jLabel138 = new javax.swing.JLabel();
        jLabel139 = new javax.swing.JLabel();
        deduct = new javax.swing.JLabel();
        lib_Card = new javax.swing.JTextField();
        curr_bal = new javax.swing.JTextField();
        bill_ge = new javax.swing.JTextField();
        submit = new javax.swing.JLabel();
        jLabel140 = new javax.swing.JLabel();
        fin_bal = new javax.swing.JTextField();
        jLabel141 = new javax.swing.JLabel();
        name3 = new javax.swing.JTextField();
        jLabel148 = new javax.swing.JLabel();
        Recharge_Acc = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        name2 = new javax.swing.JTextField();
        card_no = new javax.swing.JTextField();
        go = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        current_bal = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        rec_amt = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        new_bal = new javax.swing.JTextField();
        Confirm_bal = new javax.swing.JLabel();
        jLabel144 = new javax.swing.JLabel();
        Menu = new javax.swing.JTabbedPane();
        fast_food = new javax.swing.JPanel();
        dahi = new javax.swing.JLabel();
        ragda = new javax.swing.JLabel();
        sandwich = new javax.swing.JLabel();
        sa_mosa = new javax.swing.JLabel();
        bre_but = new javax.swing.JLabel();
        kachhori_order = new javax.swing.JLabel();
        ragda_order = new javax.swing.JLabel();
        sandwich_order = new javax.swing.JLabel();
        bre_buttorder = new javax.swing.JLabel();
        samosa_order = new javax.swing.JLabel();
        mi_sal = new javax.swing.JLabel();
        misal_order = new javax.swing.JLabel();
        Poha_order = new javax.swing.JLabel();
        upma_order = new javax.swing.JLabel();
        pvada_order = new javax.swing.JLabel();
        po_ha = new javax.swing.JLabel();
        up_ma = new javax.swing.JLabel();
        jLabel55 = new javax.swing.JLabel();
        jLabel63 = new javax.swing.JLabel();
        jLabel65 = new javax.swing.JLabel();
        potato_vada = new javax.swing.JLabel();
        poha = new javax.swing.JLabel();
        upma = new javax.swing.JLabel();
        jLabel67 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel64 = new javax.swing.JLabel();
        misal = new javax.swing.JLabel();
        jLabel66 = new javax.swing.JLabel();
        jLabel56 = new javax.swing.JLabel();
        usal = new javax.swing.JLabel();
        jLabel70 = new javax.swing.JLabel();
        jLabel54 = new javax.swing.JLabel();
        p_samosa = new javax.swing.JLabel();
        jLabel72 = new javax.swing.JLabel();
        jLabel73 = new javax.swing.JLabel();
        b_butter = new javax.swing.JLabel();
        jLabel75 = new javax.swing.JLabel();
        jLabel71 = new javax.swing.JLabel();
        jLabel76 = new javax.swing.JLabel();
        jLabel58 = new javax.swing.JLabel();
        jLabel61 = new javax.swing.JLabel();
        jLabel77 = new javax.swing.JLabel();
        jLabel78 = new javax.swing.JLabel();
        jLabel59 = new javax.swing.JLabel();
        r_pattice = new javax.swing.JLabel();
        jLabel80 = new javax.swing.JLabel();
        jLabel81 = new javax.swing.JLabel();
        jLabel62 = new javax.swing.JLabel();
        jLabel82 = new javax.swing.JLabel();
        d_kachori = new javax.swing.JLabel();
        jLabel60 = new javax.swing.JLabel();
        p_vada = new javax.swing.JLabel();
        jLabel53 = new javax.swing.JLabel();
        upma_order1 = new javax.swing.JLabel();
        Poha_order1 = new javax.swing.JLabel();
        usal_order = new javax.swing.JLabel();
        u_sal = new javax.swing.JLabel();
        mi_sal1 = new javax.swing.JLabel();
        jLabel57 = new javax.swing.JLabel();
        misal_order4 = new javax.swing.JLabel();
        jLabel123 = new javax.swing.JLabel();
        South_indian = new javax.swing.JPanel();
        chi_uth = new javax.swing.JLabel();
        pa_uth = new javax.swing.JLabel();
        nod_uth = new javax.swing.JLabel();
        co_uth = new javax.swing.JLabel();
        mi_uth = new javax.swing.JLabel();
        on_uth = new javax.swing.JLabel();
        sa_uth = new javax.swing.JLabel();
        ra_dosa = new javax.swing.JLabel();
        masa_dosa = new javax.swing.JLabel();
        sa_dosa = new javax.swing.JLabel();
        chil_ord = new javax.swing.JLabel();
        nod_ord = new javax.swing.JLabel();
        pa_ord = new javax.swing.JLabel();
        co_ord = new javax.swing.JLabel();
        mi_ord = new javax.swing.JLabel();
        on_ord = new javax.swing.JLabel();
        sa_uthord = new javax.swing.JLabel();
        ra_ord = new javax.swing.JLabel();
        ma_ord = new javax.swing.JLabel();
        sada_ord = new javax.swing.JLabel();
        rava_dosa = new javax.swing.JLabel();
        masala_dosa = new javax.swing.JLabel();
        sada_uth = new javax.swing.JLabel();
        sada_dosa = new javax.swing.JLabel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        jLabel45 = new javax.swing.JLabel();
        jLabel44 = new javax.swing.JLabel();
        jLabel43 = new javax.swing.JLabel();
        jLabel42 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        jLabel40 = new javax.swing.JLabel();
        jLabel38 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        jLabel32 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        abc = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        onio_uth = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel48 = new javax.swing.JLabel();
        jLabel29 = new javax.swing.JLabel();
        jLabel52 = new javax.swing.JLabel();
        mini_uth = new javax.swing.JLabel();
        coco_uth = new javax.swing.JLabel();
        jLabel30 = new javax.swing.JLabel();
        jLabel25 = new javax.swing.JLabel();
        palak_dosa = new javax.swing.JLabel();
        nood_uth = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        chilly_uth = new javax.swing.JLabel();
        jLabel31 = new javax.swing.JLabel();
        jLabel27 = new javax.swing.JLabel();
        chinese_lunch = new javax.swing.JPanel();
        c_m = new javax.swing.JLabel();
        spl_lunch = new javax.swing.JLabel();
        c_lunch = new javax.swing.JLabel();
        pur_bhaj = new javax.swing.JLabel();
        man = new javax.swing.JLabel();
        schz_nod = new javax.swing.JLabel();
        schz = new javax.swing.JLabel();
        manch = new javax.swing.JLabel();
        noodles = new javax.swing.JLabel();
        rice = new javax.swing.JLabel();
        chana_ord = new javax.swing.JLabel();
        sp_ord = new javax.swing.JLabel();
        chin_ord = new javax.swing.JLabel();
        pbhaji_ord = new javax.swing.JLabel();
        mancho_ord = new javax.swing.JLabel();
        schznood_ord = new javax.swing.JLabel();
        schz_ord = new javax.swing.JLabel();
        manch_ord = new javax.swing.JLabel();
        nood_order = new javax.swing.JLabel();
        f_riceorder = new javax.swing.JLabel();
        f_rice = new javax.swing.JLabel();
        jLabel93 = new javax.swing.JLabel();
        jLabel94 = new javax.swing.JLabel();
        jLabel92 = new javax.swing.JLabel();
        h_noodles = new javax.swing.JLabel();
        jLabel96 = new javax.swing.JLabel();
        jLabel69 = new javax.swing.JLabel();
        jLabel74 = new javax.swing.JLabel();
        jLabel97 = new javax.swing.JLabel();
        manchurian = new javax.swing.JLabel();
        jLabel98 = new javax.swing.JLabel();
        jLabel84 = new javax.swing.JLabel();
        jLabel99 = new javax.swing.JLabel();
        schz_rice = new javax.swing.JLabel();
        jLabel101 = new javax.swing.JLabel();
        jLabel102 = new javax.swing.JLabel();
        jLabel79 = new javax.swing.JLabel();
        schz_noodles = new javax.swing.JLabel();
        jLabel104 = new javax.swing.JLabel();
        jLabel105 = new javax.swing.JLabel();
        jLabel83 = new javax.swing.JLabel();
        man_soup = new javax.swing.JLabel();
        jLabel107 = new javax.swing.JLabel();
        jLabel108 = new javax.swing.JLabel();
        jLabel85 = new javax.swing.JLabel();
        puri = new javax.swing.JLabel();
        jLabel86 = new javax.swing.JLabel();
        jLabel110 = new javax.swing.JLabel();
        lunch = new javax.swing.JLabel();
        jLabel112 = new javax.swing.JLabel();
        jLabel113 = new javax.swing.JLabel();
        jLabel87 = new javax.swing.JLabel();
        sp_lunch = new javax.swing.JLabel();
        jLabel116 = new javax.swing.JLabel();
        jLabel115 = new javax.swing.JLabel();
        chana = new javax.swing.JLabel();
        jLabel118 = new javax.swing.JLabel();
        jLabel88 = new javax.swing.JLabel();
        jLabel89 = new javax.swing.JLabel();
        sada_ord4 = new javax.swing.JLabel();
        beverages = new javax.swing.JPanel();
        c_drinks = new javax.swing.JLabel();
        jLabel121 = new javax.swing.JLabel();
        coffee = new javax.swing.JLabel();
        jLabel122 = new javax.swing.JLabel();
        jLabel68 = new javax.swing.JLabel();
        h_choc = new javax.swing.JLabel();
        jLabel125 = new javax.swing.JLabel();
        tea = new javax.swing.JLabel();
        jLabel91 = new javax.swing.JLabel();
        jLabel126 = new javax.swing.JLabel();
        jLabel127 = new javax.swing.JLabel();
        jLabel95 = new javax.swing.JLabel();
        jLabel128 = new javax.swing.JLabel();
        milk_s = new javax.swing.JLabel();
        jLabel100 = new javax.swing.JLabel();
        jLabel142 = new javax.swing.JLabel();
        jLabel103 = new javax.swing.JLabel();
        f_juice = new javax.swing.JLabel();
        jLabel155 = new javax.swing.JLabel();
        jLabel106 = new javax.swing.JLabel();
        lassi = new javax.swing.JLabel();
        jLabel157 = new javax.swing.JLabel();
        jLabel109 = new javax.swing.JLabel();
        veg_juice = new javax.swing.JLabel();
        jLabel159 = new javax.swing.JLabel();
        jLabel160 = new javax.swing.JLabel();
        jLabel111 = new javax.swing.JLabel();
        chaas = new javax.swing.JLabel();
        jLabel114 = new javax.swing.JLabel();
        jLabel162 = new javax.swing.JLabel();
        rio = new javax.swing.JLabel();
        jLabel117 = new javax.swing.JLabel();
        acc_settings = new javax.swing.JPanel();
        acc_create = new javax.swing.JLabel();
        del_acc = new javax.swing.JLabel();
        jLabel146 = new javax.swing.JLabel();
        jLabel143 = new javax.swing.JLabel();
        mini = new javax.swing.JLabel();

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog1Layout.setVerticalGroup(
            jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jDialog2Layout.setVerticalGroup(
            jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        jLabel4.setText("jLabel4");

        jLabel7.setText("jLabel7");

        jLabel24.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N

        jLabel131.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel131.setText("User ID :");

        jTextField2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jTextField2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel132.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel132.setText("Current Balance");

        jTextField3.setEditable(false);
        jTextField3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jTextField3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel133.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel133.setText("Bill Genereated");

        bill_gen.setEditable(false);
        bill_gen.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        bill_gen.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel134.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel134.setText("Deduct Amount");

        jLabel135.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel135.setText("New Balance");

        jTextField4.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        jTextField4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        print.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        print.setText("Print Bill");
        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printMouseClicked(evt);
            }
        });

        jLabel137.setText("jLabel137");

        jLabel90.setText("jLabel90");

        jLabel26.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel26.setForeground(new java.awt.Color(57, 147, 236));
        jLabel26.setText("Sada ");

        jLabel33.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel33.setForeground(new java.awt.Color(57, 147, 236));
        jLabel33.setText("Sada ");

        jLabel34.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel34.setForeground(new java.awt.Color(57, 147, 236));
        jLabel34.setText("Sada ");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(40, 40, 40));
        setUndecorated(true);
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        getContentPane().setLayout(null);

        SidePanel.setBackground(new java.awt.Color(40, 40, 40));
        SidePanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        acc_sett.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/AccountSettings.jpg"))); // NOI18N
        acc_sett.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        acc_sett.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acc_settMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                acc_settMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                acc_settMouseExited(evt);
            }
        });

        Main_menu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/MainMenu (1).jpg"))); // NOI18N
        Main_menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Main_menu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Main_menuMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Main_menuMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Main_menuMouseExited(evt);
            }
        });

        logout.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        logout.setForeground(new java.awt.Color(240, 240, 240));
        logout.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/logout.jpg"))); // NOI18N
        logout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                logoutMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                logoutMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                logoutMouseExited(evt);
            }
        });

        Recharge.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Recharge.jpg"))); // NOI18N
        Recharge.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Recharge.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                RechargeMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                RechargeMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                RechargeMouseExited(evt);
            }
        });

        javax.swing.GroupLayout SidePanelLayout = new javax.swing.GroupLayout(SidePanel);
        SidePanel.setLayout(SidePanelLayout);
        SidePanelLayout.setHorizontalGroup(
            SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Main_menu)
                    .addComponent(Recharge)
                    .addComponent(logout)
                    .addComponent(acc_sett))
                .addContainerGap(40, Short.MAX_VALUE))
        );
        SidePanelLayout.setVerticalGroup(
            SidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SidePanelLayout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(Main_menu, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 64, Short.MAX_VALUE)
                .addComponent(acc_sett)
                .addGap(80, 80, 80)
                .addComponent(Recharge)
                .addGap(93, 93, 93)
                .addComponent(logout)
                .addGap(85, 85, 85))
        );

        getContentPane().add(SidePanel);
        SidePanel.setBounds(10, 110, 210, 590);

        close1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/close.jpg"))); // NOI18N
        close1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        close1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                close1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                close1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                close1MouseExited(evt);
            }
        });
        getContentPane().add(close1);
        close1.setBounds(1330, 10, 20, 20);

        billboard.setBackground(new java.awt.Color(40, 40, 40));
        billboard.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        billboard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                billboardMouseClicked(evt);
            }
        });
        billboard.setLayout(null);

        g_total.setFont(new java.awt.Font("SansSerif", 0, 22)); // NOI18N
        g_total.setForeground(new java.awt.Color(240, 240, 240));
        g_total.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(g_total);
        g_total.setBounds(210, 370, 50, 30);

        jLabel51.setFont(new java.awt.Font("Myriad Pro", 0, 20)); // NOI18N
        jLabel51.setForeground(new java.awt.Color(240, 240, 240));
        jLabel51.setText("Grand Total");
        billboard.add(jLabel51);
        jLabel51.setBounds(40, 380, 120, 20);
        billboard.add(jSeparator2);
        jSeparator2.setBounds(30, 365, 230, 10);

        main6.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        main6.setForeground(new java.awt.Color(240, 240, 240));
        billboard.add(main6);
        main6.setBounds(30, 325, 110, 30);

        main5.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        main5.setForeground(new java.awt.Color(240, 240, 240));
        billboard.add(main5);
        main5.setBounds(30, 290, 110, 30);

        main4.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        main4.setForeground(new java.awt.Color(240, 240, 240));
        billboard.add(main4);
        main4.setBounds(30, 255, 110, 30);

        main3.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        main3.setForeground(new java.awt.Color(240, 240, 240));
        billboard.add(main3);
        main3.setBounds(30, 220, 110, 30);

        main2.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        main2.setForeground(new java.awt.Color(240, 240, 240));
        billboard.add(main2);
        main2.setBounds(30, 185, 110, 30);

        main1.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        main1.setForeground(new java.awt.Color(240, 240, 240));
        billboard.add(main1);
        main1.setBounds(30, 150, 110, 30);

        jLabel50.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        jLabel50.setForeground(new java.awt.Color(240, 240, 240));
        jLabel50.setText("Total");
        jLabel50.setToolTipText("");
        billboard.add(jLabel50);
        jLabel50.setBounds(220, 120, 38, 19);

        jLabel49.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        jLabel49.setForeground(new java.awt.Color(240, 240, 240));
        jLabel49.setText("Cost Plates");
        billboard.add(jLabel49);
        jLabel49.setBounds(130, 120, 90, 19);

        label2.setFont(new java.awt.Font("Myriad Pro", 0, 18)); // NOI18N
        label2.setForeground(new java.awt.Color(240, 240, 240));
        label2.setText("Item");
        billboard.add(label2);
        label2.setBounds(37, 120, 40, 20);

        clear.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        clear.setForeground(new java.awt.Color(240, 240, 240));
        clear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clear.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/clear0.jpg"))); // NOI18N
        clear.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearMouseExited(evt);
            }
        });
        billboard.add(clear);
        clear.setBounds(70, 10, 160, 30);

        gen_bill.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        gen_bill.setForeground(new java.awt.Color(240, 240, 240));
        gen_bill.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/generate0.jpg"))); // NOI18N
        gen_bill.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        gen_bill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                gen_billMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                gen_billMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                gen_billMouseExited(evt);
            }
        });
        billboard.add(gen_bill);
        gen_bill.setBounds(70, 420, 150, 30);
        billboard.add(jSeparator1);
        jSeparator1.setBounds(30, 340, 0, 2);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        billboard.add(jScrollPane1);
        jScrollPane1.setBounds(30, 506, 0, 0);

        c1.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        c1.setForeground(new java.awt.Color(240, 240, 240));
        c1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(c1);
        c1.setBounds(140, 150, 30, 30);
        billboard.add(p1);
        p1.setBounds(170, 144, 0, 30);

        t1.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        t1.setForeground(new java.awt.Color(240, 240, 240));
        t1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(t1);
        t1.setBounds(220, 150, 40, 30);

        p01.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        p01.setForeground(new java.awt.Color(240, 240, 240));
        p01.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(p01);
        p01.setBounds(180, 150, 30, 30);

        c2.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        c2.setForeground(new java.awt.Color(240, 240, 240));
        c2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(c2);
        c2.setBounds(140, 185, 30, 30);

        p2.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        p2.setForeground(new java.awt.Color(240, 240, 240));
        p2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        p2.setToolTipText("");
        billboard.add(p2);
        p2.setBounds(180, 185, 30, 30);

        t2.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        t2.setForeground(new java.awt.Color(240, 240, 240));
        t2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(t2);
        t2.setBounds(220, 185, 40, 30);

        c3.setForeground(new java.awt.Color(240, 240, 240));
        c3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(c3);
        c3.setBounds(140, 220, 30, 30);

        p3.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        p3.setForeground(new java.awt.Color(240, 240, 240));
        p3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(p3);
        p3.setBounds(180, 220, 30, 30);

        t3.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        t3.setForeground(new java.awt.Color(240, 240, 240));
        t3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(t3);
        t3.setBounds(220, 220, 40, 30);

        c4.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        c4.setForeground(new java.awt.Color(240, 240, 240));
        c4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(c4);
        c4.setBounds(140, 255, 30, 30);

        p4.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        p4.setForeground(new java.awt.Color(240, 240, 240));
        p4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(p4);
        p4.setBounds(180, 255, 30, 30);

        c5.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        c5.setForeground(new java.awt.Color(240, 240, 240));
        c5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(c5);
        c5.setBounds(140, 290, 30, 30);

        c6.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        c6.setForeground(new java.awt.Color(240, 240, 240));
        c6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(c6);
        c6.setBounds(140, 325, 30, 30);

        p5.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        p5.setForeground(new java.awt.Color(240, 240, 240));
        p5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(p5);
        p5.setBounds(180, 290, 30, 30);

        p6.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        p6.setForeground(new java.awt.Color(240, 240, 240));
        p6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(p6);
        p6.setBounds(180, 325, 30, 30);

        t4.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        t4.setForeground(new java.awt.Color(240, 240, 240));
        t4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(t4);
        t4.setBounds(220, 255, 40, 30);

        t5.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        t5.setForeground(new java.awt.Color(240, 240, 240));
        t5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(t5);
        t5.setBounds(220, 290, 40, 30);

        t6.setFont(new java.awt.Font("Myriad Pro", 0, 14)); // NOI18N
        t6.setForeground(new java.awt.Color(240, 240, 240));
        t6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        billboard.add(t6);
        t6.setBounds(220, 325, 40, 30);

        jLabel39.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Chalkboard1.jpg"))); // NOI18N
        jLabel39.setText("jLabel39");
        billboard.add(jLabel39);
        jLabel39.setBounds(20, 50, 250, 360);

        getContentPane().add(billboard);
        billboard.setBounds(1070, 110, 290, 590);

        Base.setBackground(new java.awt.Color(40, 40, 40));
        Base.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Base.setLayout(new java.awt.CardLayout());

        Create_Acc.setBackground(new java.awt.Color(40, 40, 40));
        Create_Acc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Create_Acc.setLayout(null);

        jLabel8.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(240, 240, 240));
        jLabel8.setText("Name");
        Create_Acc.add(jLabel8);
        jLabel8.setBounds(110, 150, 60, 25);

        jLabel9.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(240, 240, 240));
        jLabel9.setText("Type");
        Create_Acc.add(jLabel9);
        jLabel9.setBounds(110, 200, 50, 25);

        jLabel10.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(240, 240, 240));
        jLabel10.setText("Department");
        Create_Acc.add(jLabel10);
        jLabel10.setBounds(110, 330, 124, 25);

        jLabel11.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(240, 240, 240));
        jLabel11.setText("Year ");
        Create_Acc.add(jLabel11);
        jLabel11.setBounds(110, 380, 49, 25);

        jLabel12.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(240, 240, 240));
        jLabel12.setText("Deposit");
        Create_Acc.add(jLabel12);
        jLabel12.setBounds(110, 430, 79, 25);

        name.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });
        Create_Acc.add(name);
        name.setBounds(450, 150, 214, 33);

        card_num.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        card_num.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card_numKeyTyped(evt);
            }
        });
        Create_Acc.add(card_num);
        card_num.setBounds(450, 250, 214, 33);

        department.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        department.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "VIIE", "VSIT", "VIT", "VP", " " }));
        Create_Acc.add(department);
        department.setBounds(450, 330, 74, 33);

        year.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        year.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FE", "SE", "TE", "BE" }));
        Create_Acc.add(year);
        year.setBounds(450, 380, 59, 33);

        deposit.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        deposit.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "200", "500", "1000" }));
        Create_Acc.add(deposit);
        deposit.setBounds(450, 430, 75, 33);

        back.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        back.setForeground(new java.awt.Color(240, 240, 240));
        back.setText("Back");
        back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        Create_Acc.add(back);
        back.setBounds(29, 538, 40, 24);

        create.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        create.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/create0.jpg"))); // NOI18N
        create.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        create.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                createMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                createMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                createMouseExited(evt);
            }
        });
        Create_Acc.add(create);
        create.setBounds(410, 490, 150, 30);

        jLabel147.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/create (1).jpg"))); // NOI18N
        Create_Acc.add(jLabel147);
        jLabel147.setBounds(170, 30, 480, 60);

        jLabel164.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        jLabel164.setForeground(new java.awt.Color(240, 240, 240));
        jLabel164.setText("Enrollment Number");
        Create_Acc.add(jLabel164);
        jLabel164.setBounds(110, 260, 280, 25);

        Student.setBackground(new java.awt.Color(40, 40, 40));
        buttonGroup1.add(Student);
        Student.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        Student.setForeground(new java.awt.Color(240, 240, 240));
        Student.setText("Student");
        Student.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentActionPerformed(evt);
            }
        });
        Create_Acc.add(Student);
        Student.setBounds(450, 200, 120, 30);

        staff.setBackground(new java.awt.Color(40, 40, 40));
        buttonGroup1.add(staff);
        staff.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        staff.setForeground(new java.awt.Color(240, 240, 240));
        staff.setText("Staff");
        staff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                staffActionPerformed(evt);
            }
        });
        Create_Acc.add(staff);
        staff.setBounds(580, 200, 80, 30);

        Base.add(Create_Acc, "card4");

        Delete_Acc.setBackground(new java.awt.Color(40, 40, 40));
        Delete_Acc.setLayout(null);

        jLabel5.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(240, 240, 240));
        jLabel5.setText("Name");
        Delete_Acc.add(jLabel5);
        jLabel5.setBounds(270, 180, 100, 20);

        name1.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        name1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(67, 67, 68), 2));
        name1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                name1ActionPerformed(evt);
            }
        });
        name1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                name1KeyTyped(evt);
            }
        });
        Delete_Acc.add(name1);
        name1.setBounds(410, 170, 213, 33);

        jLabel6.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(240, 240, 240));
        jLabel6.setText("Library Card Number ");
        Delete_Acc.add(jLabel6);
        jLabel6.setBounds(130, 230, 232, 32);

        card_number.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        card_number.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card_numberKeyTyped(evt);
            }
        });
        Delete_Acc.add(card_number);
        card_number.setBounds(410, 230, 213, 30);

        delete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/delete0.jpg"))); // NOI18N
        delete.setToolTipText("");
        delete.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });
        Delete_Acc.add(delete);
        delete.setBounds(440, 290, 150, 30);

        jLabel145.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/delete (1).jpg"))); // NOI18N
        Delete_Acc.add(jLabel145);
        jLabel145.setBounds(200, 10, 490, 90);
        Delete_Acc.add(jSeparator3);
        jSeparator3.setBounds(40, 350, 670, 20);

        jLabel119.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel119.setForeground(new java.awt.Color(255, 255, 255));
        jLabel119.setText("Delete Multiple Records");
        Delete_Acc.add(jLabel119);
        jLabel119.setBounds(90, 370, 260, 40);

        year1.setFont(new java.awt.Font("SansSerif", 0, 14)); // NOI18N
        year1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "FE", "SE", "TE" }));
        Delete_Acc.add(year1);
        year1.setBounds(420, 370, 70, 30);

        del_mul.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/delete0.jpg"))); // NOI18N
        del_mul.setText("jLabel165");
        del_mul.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                del_mulMouseClicked(evt);
            }
        });
        Delete_Acc.add(del_mul);
        del_mul.setBounds(420, 420, 70, 30);

        Base.add(Delete_Acc, "card5");

        Deduct_amt.setBackground(new java.awt.Color(40, 40, 40));
        Deduct_amt.setLayout(null);

        jLabel136.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel136.setForeground(new java.awt.Color(240, 240, 240));
        jLabel136.setText("Library Card Number");
        Deduct_amt.add(jLabel136);
        jLabel136.setBounds(90, 130, 230, 50);

        jLabel138.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel138.setForeground(new java.awt.Color(240, 240, 240));
        jLabel138.setText("Current Balance");
        Deduct_amt.add(jLabel138);
        jLabel138.setBounds(150, 290, 180, 32);

        jLabel139.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel139.setForeground(new java.awt.Color(240, 240, 240));
        jLabel139.setText("Bill Generated ");
        Deduct_amt.add(jLabel139);
        jLabel139.setBounds(160, 340, 170, 32);

        deduct.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        deduct.setForeground(new java.awt.Color(240, 240, 240));
        deduct.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/deduct (2).jpg"))); // NOI18N
        deduct.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        deduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deductMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deductMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deductMouseExited(evt);
            }
        });
        Deduct_amt.add(deduct);
        deduct.setBounds(360, 390, 160, 30);

        lib_Card.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        lib_Card.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lib_CardActionPerformed(evt);
            }
        });
        lib_Card.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                lib_CardKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                lib_CardKeyTyped(evt);
            }
        });
        Deduct_amt.add(lib_Card);
        lib_Card.setBounds(360, 140, 180, 30);

        curr_bal.setEditable(false);
        curr_bal.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        curr_bal.setToolTipText("");
        curr_bal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                curr_balActionPerformed(evt);
            }
        });
        Deduct_amt.add(curr_bal);
        curr_bal.setBounds(350, 290, 180, 30);

        bill_ge.setEditable(false);
        bill_ge.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        Deduct_amt.add(bill_ge);
        bill_ge.setBounds(350, 340, 180, 30);

        submit.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        submit.setForeground(new java.awt.Color(240, 240, 240));
        submit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/submit0 (1).jpg"))); // NOI18N
        submit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                submitMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                submitMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                submitMouseExited(evt);
            }
        });
        Deduct_amt.add(submit);
        submit.setBounds(370, 180, 160, 30);

        jLabel140.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel140.setForeground(new java.awt.Color(240, 240, 240));
        jLabel140.setText("Final Balance");
        Deduct_amt.add(jLabel140);
        jLabel140.setBounds(160, 440, 150, 32);

        fin_bal.setEditable(false);
        fin_bal.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        Deduct_amt.add(fin_bal);
        fin_bal.setBounds(340, 440, 190, 30);

        jLabel141.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel141.setForeground(new java.awt.Color(240, 240, 240));
        jLabel141.setText("Name");
        Deduct_amt.add(jLabel141);
        jLabel141.setBounds(230, 240, 63, 30);

        name3.setEditable(false);
        name3.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        name3.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                name3KeyTyped(evt);
            }
        });
        Deduct_amt.add(name3);
        name3.setBounds(350, 240, 180, 33);

        jLabel148.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/deduct.jpg"))); // NOI18N
        Deduct_amt.add(jLabel148);
        jLabel148.setBounds(190, 20, 510, 80);

        Base.add(Deduct_amt, "card7");

        Recharge_Acc.setBackground(new java.awt.Color(40, 40, 40));
        Recharge_Acc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        Recharge_Acc.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        Recharge_Acc.setLayout(null);

        jLabel14.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(240, 240, 240));
        jLabel14.setText("Name");
        Recharge_Acc.add(jLabel14);
        jLabel14.setBounds(260, 260, 63, 32);

        jLabel15.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel15.setForeground(new java.awt.Color(240, 240, 240));
        jLabel15.setText("Library Card Number");
        Recharge_Acc.add(jLabel15);
        jLabel15.setBounds(110, 140, 225, 32);

        name2.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        name2.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                name2KeyTyped(evt);
            }
        });
        Recharge_Acc.add(name2);
        name2.setBounds(430, 260, 220, 33);

        card_no.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        card_no.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                card_noKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                card_noKeyTyped(evt);
            }
        });
        Recharge_Acc.add(card_no);
        card_no.setBounds(420, 140, 216, 33);

        go.setFont(new java.awt.Font("Myriad Pro", 0, 24)); // NOI18N
        go.setForeground(new java.awt.Color(240, 240, 240));
        go.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        go.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/submit0 (1).jpg"))); // NOI18N
        go.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        go.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                goMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                goMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                goMouseExited(evt);
            }
        });
        Recharge_Acc.add(go);
        go.setBounds(430, 190, 160, 30);

        jLabel16.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel16.setForeground(new java.awt.Color(240, 240, 240));
        jLabel16.setText("Current Balance");
        Recharge_Acc.add(jLabel16);
        jLabel16.setBounds(150, 310, 175, 32);

        current_bal.setEditable(false);
        current_bal.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        Recharge_Acc.add(current_bal);
        current_bal.setBounds(430, 310, 90, 33);

        jLabel17.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(240, 240, 240));
        jLabel17.setText("Recharge Amount ");
        Recharge_Acc.add(jLabel17);
        jLabel17.setBounds(130, 360, 201, 32);

        rec_amt.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        rec_amt.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "100", "200", "500", "1000" }));
        rec_amt.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                rec_amtItemStateChanged(evt);
            }
        });
        rec_amt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rec_amtMouseClicked(evt);
            }
        });
        rec_amt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rec_amtActionPerformed(evt);
            }
        });
        Recharge_Acc.add(rec_amt);
        rec_amt.setBounds(430, 360, 90, 33);

        jLabel13.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(240, 240, 240));
        jLabel13.setText("New Balance");
        Recharge_Acc.add(jLabel13);
        jLabel13.setBounds(180, 410, 170, 32);

        new_bal.setEditable(false);
        new_bal.setFont(new java.awt.Font("SansSerif", 0, 18)); // NOI18N
        Recharge_Acc.add(new_bal);
        new_bal.setBounds(430, 410, 90, 30);

        Confirm_bal.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        Confirm_bal.setForeground(new java.awt.Color(240, 240, 240));
        Confirm_bal.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/confirm1.jpg"))); // NOI18N
        Confirm_bal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Confirm_bal.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Confirm_bal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Confirm_balMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                Confirm_balMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                Confirm_balMouseExited(evt);
            }
        });
        Recharge_Acc.add(Confirm_bal);
        Confirm_bal.setBounds(400, 460, 180, 30);

        jLabel144.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/recharge (2).jpg"))); // NOI18N
        Recharge_Acc.add(jLabel144);
        jLabel144.setBounds(160, 0, 490, 80);

        Base.add(Recharge_Acc, "card6");

        Menu.setBackground(new java.awt.Color(40, 40, 40));
        Menu.setForeground(new java.awt.Color(240, 240, 240));
        Menu.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Menu.setFont(new java.awt.Font("Myriad Pro", 1, 18)); // NOI18N

        fast_food.setBackground(new java.awt.Color(40, 40, 40));
        fast_food.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        fast_food.setLayout(null);

        dahi.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        dahi.setForeground(new java.awt.Color(0, 204, 0));
        dahi.setText("         Available");
        fast_food.add(dahi);
        dahi.setBounds(420, 460, 140, 30);

        ragda.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ragda.setForeground(new java.awt.Color(0, 204, 0));
        ragda.setText("         Available");
        fast_food.add(ragda);
        ragda.setBounds(230, 460, 140, 30);

        sandwich.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        sandwich.setForeground(new java.awt.Color(0, 204, 0));
        sandwich.setText("         Available");
        fast_food.add(sandwich);
        sandwich.setBounds(610, 280, 140, 30);

        sa_mosa.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        sa_mosa.setForeground(new java.awt.Color(0, 204, 0));
        sa_mosa.setText("         Available");
        fast_food.add(sa_mosa);
        sa_mosa.setBounds(230, 280, 140, 30);

        bre_but.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        bre_but.setForeground(new java.awt.Color(0, 204, 0));
        bre_but.setText("         Available");
        fast_food.add(bre_but);
        bre_but.setBounds(420, 280, 140, 30);

        kachhori_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        kachhori_order.setText("      Place Order");
        kachhori_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        kachhori_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                kachhori_orderMouseClicked(evt);
            }
        });
        fast_food.add(kachhori_order);
        kachhori_order.setBounds(420, 520, 140, 20);

        ragda_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        ragda_order.setText("      Place Order");
        ragda_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ragda_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ragda_orderMouseClicked(evt);
            }
        });
        fast_food.add(ragda_order);
        ragda_order.setBounds(230, 519, 140, 21);

        sandwich_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        sandwich_order.setText("      Place Order");
        sandwich_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sandwich_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sandwich_orderMouseClicked(evt);
            }
        });
        fast_food.add(sandwich_order);
        sandwich_order.setBounds(610, 340, 140, 21);

        bre_buttorder.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        bre_buttorder.setText("      Place Order");
        bre_buttorder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        bre_buttorder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bre_buttorderMouseClicked(evt);
            }
        });
        fast_food.add(bre_buttorder);
        bre_buttorder.setBounds(420, 340, 140, 20);

        samosa_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        samosa_order.setText("      Place Order");
        samosa_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        samosa_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                samosa_orderMouseClicked(evt);
            }
        });
        fast_food.add(samosa_order);
        samosa_order.setBounds(230, 340, 140, 20);

        mi_sal.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        mi_sal.setForeground(new java.awt.Color(0, 204, 0));
        mi_sal.setText("         Available");
        fast_food.add(mi_sal);
        mi_sal.setBounds(610, 110, 140, 20);

        misal_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        misal_order.setText("      Place Order");
        misal_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        misal_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                misal_orderMouseClicked(evt);
            }
        });
        fast_food.add(misal_order);
        misal_order.setBounds(610, 168, 140, 21);

        Poha_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        Poha_order.setText("      Place Order");
        Poha_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Poha_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Poha_orderMouseClicked(evt);
            }
        });
        fast_food.add(Poha_order);
        Poha_order.setBounds(420, 168, 140, 21);

        upma_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        upma_order.setText("      Place Order");
        upma_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        upma_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                upma_orderMouseClicked(evt);
            }
        });
        fast_food.add(upma_order);
        upma_order.setBounds(230, 168, 140, 21);

        pvada_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        pvada_order.setText("      Place Order");
        pvada_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pvada_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pvada_orderMouseClicked(evt);
            }
        });
        fast_food.add(pvada_order);
        pvada_order.setBounds(40, 168, 140, 20);

        po_ha.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        po_ha.setForeground(new java.awt.Color(0, 204, 0));
        po_ha.setText("         Available");
        fast_food.add(po_ha);
        po_ha.setBounds(420, 110, 140, 20);

        up_ma.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        up_ma.setForeground(new java.awt.Color(0, 204, 0));
        up_ma.setText("         Available");
        fast_food.add(up_ma);
        up_ma.setBounds(230, 110, 140, 20);
        fast_food.add(jLabel55);
        jLabel55.setBounds(612, 61, 0, 0);

        jLabel63.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel63.setForeground(new java.awt.Color(255, 76, 77));
        jLabel63.setText("Potato Vada");
        fast_food.add(jLabel63);
        jLabel63.setBounds(43, 50, 140, 32);

        jLabel65.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel65.setForeground(new java.awt.Color(255, 76, 77));
        jLabel65.setText("Upma");
        fast_food.add(jLabel65);
        jLabel65.setBounds(270, 50, 70, 32);

        potato_vada.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        potato_vada.setForeground(new java.awt.Color(240, 240, 240));
        potato_vada.setText("        10");
        potato_vada.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        potato_vada.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                potato_vadaMouseClicked(evt);
            }
        });
        fast_food.add(potato_vada);
        potato_vada.setBounds(40, 138, 140, 25);

        poha.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        poha.setForeground(new java.awt.Color(240, 240, 240));
        poha.setText("        25");
        poha.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        poha.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pohaMouseClicked(evt);
            }
        });
        fast_food.add(poha);
        poha.setBounds(416, 140, 150, 25);

        upma.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        upma.setForeground(new java.awt.Color(240, 240, 240));
        upma.setText("         25");
        upma.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        upma.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                upmaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                upmaMouseEntered(evt);
            }
        });
        fast_food.add(upma);
        upma.setBounds(220, 140, 160, 25);

        jLabel67.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel67.setForeground(new java.awt.Color(255, 76, 77));
        jLabel67.setText("Poha");
        fast_food.add(jLabel67);
        jLabel67.setBounds(460, 50, 70, 32);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel3);
        jLabel3.setBounds(410, 30, 160, 160);

        jLabel64.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel64.setForeground(new java.awt.Color(255, 76, 77));
        jLabel64.setText("Misal");
        fast_food.add(jLabel64);
        jLabel64.setBounds(650, 50, 70, 32);

        misal.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        misal.setForeground(new java.awt.Color(240, 240, 240));
        misal.setText("        30");
        misal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        misal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                misalMouseClicked(evt);
            }
        });
        fast_food.add(misal);
        misal.setBounds(610, 140, 140, 25);

        jLabel66.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel66.setForeground(new java.awt.Color(255, 76, 77));
        jLabel66.setText("  Usal");
        fast_food.add(jLabel66);
        jLabel66.setBounds(70, 220, 70, 32);

        jLabel56.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel56);
        jLabel56.setBounds(600, 30, 160, 160);

        usal.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        usal.setForeground(new java.awt.Color(240, 240, 240));
        usal.setText("        25");
        usal.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        usal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usalMouseClicked(evt);
            }
        });
        fast_food.add(usal);
        usal.setBounds(40, 310, 140, 30);

        jLabel70.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel70.setForeground(new java.awt.Color(255, 76, 77));
        jLabel70.setText("Bread");
        fast_food.add(jLabel70);
        jLabel70.setBounds(450, 220, 100, 32);

        jLabel54.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        jLabel54.setToolTipText("");
        fast_food.add(jLabel54);
        jLabel54.setBounds(220, 30, 160, 160);

        p_samosa.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        p_samosa.setForeground(new java.awt.Color(240, 240, 240));
        p_samosa.setText("        15");
        p_samosa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        p_samosa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_samosaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                p_samosaMouseEntered(evt);
            }
        });
        fast_food.add(p_samosa);
        p_samosa.setBounds(230, 310, 140, 30);

        jLabel72.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel72.setForeground(new java.awt.Color(255, 76, 77));
        jLabel72.setText("Punjabi");
        fast_food.add(jLabel72);
        jLabel72.setBounds(250, 220, 100, 32);

        jLabel73.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel73.setForeground(new java.awt.Color(255, 76, 77));
        jLabel73.setText("Samosa");
        fast_food.add(jLabel73);
        jLabel73.setBounds(250, 250, 100, 32);

        b_butter.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        b_butter.setForeground(new java.awt.Color(240, 240, 240));
        b_butter.setText("        20");
        b_butter.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        b_butter.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                b_butterMouseClicked(evt);
            }
        });
        fast_food.add(b_butter);
        b_butter.setBounds(420, 310, 140, 30);

        jLabel75.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel75.setForeground(new java.awt.Color(255, 76, 77));
        jLabel75.setText("Ragda");
        fast_food.add(jLabel75);
        jLabel75.setBounds(260, 400, 100, 32);

        jLabel71.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel71.setForeground(new java.awt.Color(255, 76, 77));
        jLabel71.setText("Butter");
        fast_food.add(jLabel71);
        jLabel71.setBounds(450, 250, 100, 32);

        jLabel76.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel76.setForeground(new java.awt.Color(240, 240, 240));
        jLabel76.setText("        30");
        jLabel76.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel76.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel76MouseClicked(evt);
            }
        });
        fast_food.add(jLabel76);
        jLabel76.setBounds(610, 310, 140, 30);

        jLabel58.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel58);
        jLabel58.setBounds(220, 205, 160, 159);

        jLabel61.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel61);
        jLabel61.setBounds(410, 205, 160, 159);

        jLabel77.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel77.setForeground(new java.awt.Color(255, 76, 77));
        jLabel77.setText("Veg.");
        fast_food.add(jLabel77);
        jLabel77.setBounds(650, 220, 50, 32);

        jLabel78.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel78.setForeground(new java.awt.Color(255, 76, 77));
        jLabel78.setText("Sandwich");
        fast_food.add(jLabel78);
        jLabel78.setBounds(620, 250, 120, 32);

        jLabel59.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel59);
        jLabel59.setBounds(600, 205, 160, 159);

        r_pattice.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        r_pattice.setForeground(new java.awt.Color(240, 240, 240));
        r_pattice.setText("        25");
        r_pattice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        r_pattice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                r_patticeMouseClicked(evt);
            }
        });
        fast_food.add(r_pattice);
        r_pattice.setBounds(230, 490, 140, 25);

        jLabel80.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel80.setForeground(new java.awt.Color(255, 76, 77));
        jLabel80.setText("  Dahi");
        fast_food.add(jLabel80);
        jLabel80.setBounds(450, 400, 100, 32);

        jLabel81.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel81.setForeground(new java.awt.Color(255, 76, 77));
        jLabel81.setText("Pattice");
        fast_food.add(jLabel81);
        jLabel81.setBounds(260, 430, 100, 32);

        jLabel62.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel62);
        jLabel62.setBounds(220, 380, 160, 160);

        jLabel82.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel82.setForeground(new java.awt.Color(255, 76, 77));
        jLabel82.setText("Kachori");
        fast_food.add(jLabel82);
        jLabel82.setBounds(450, 430, 100, 32);

        d_kachori.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        d_kachori.setForeground(new java.awt.Color(240, 240, 240));
        d_kachori.setText("        20");
        d_kachori.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        d_kachori.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                d_kachoriMouseClicked(evt);
            }
        });
        fast_food.add(d_kachori);
        d_kachori.setBounds(420, 490, 140, 25);

        jLabel60.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel60);
        jLabel60.setBounds(410, 380, 160, 160);

        p_vada.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        p_vada.setForeground(new java.awt.Color(0, 204, 0));
        p_vada.setText("          Available");
        fast_food.add(p_vada);
        p_vada.setBounds(40, 110, 140, 20);

        jLabel53.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel53);
        jLabel53.setBounds(30, 30, 160, 159);

        upma_order1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        upma_order1.setForeground(new java.awt.Color(255, 51, 51));
        upma_order1.setText("      Place Order");
        fast_food.add(upma_order1);
        upma_order1.setBounds(230, 170, 140, 21);

        Poha_order1.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        Poha_order1.setForeground(new java.awt.Color(255, 51, 51));
        Poha_order1.setText("      Place Order");
        Poha_order1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        Poha_order1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Poha_order1MouseClicked(evt);
            }
        });
        fast_food.add(Poha_order1);
        Poha_order1.setBounds(420, 169, 140, 20);

        usal_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        usal_order.setText("      Place Order");
        usal_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        usal_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                usal_orderMouseClicked(evt);
            }
        });
        fast_food.add(usal_order);
        usal_order.setBounds(40, 340, 140, 20);

        u_sal.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        u_sal.setForeground(new java.awt.Color(0, 204, 0));
        u_sal.setText("         Available");
        fast_food.add(u_sal);
        u_sal.setBounds(40, 280, 140, 30);

        mi_sal1.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        mi_sal1.setForeground(new java.awt.Color(0, 204, 0));
        mi_sal1.setText("         Available");
        fast_food.add(mi_sal1);
        mi_sal1.setBounds(610, 110, 140, 20);

        jLabel57.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Red.jpg"))); // NOI18N
        fast_food.add(jLabel57);
        jLabel57.setBounds(30, 205, 160, 159);

        misal_order4.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        misal_order4.setForeground(new java.awt.Color(255, 51, 51));
        misal_order4.setText("      Place Order");
        misal_order4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        misal_order4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                misal_order4MouseClicked(evt);
            }
        });
        fast_food.add(misal_order4);
        misal_order4.setBounds(420, 340, 140, 20);

        jLabel123.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        fast_food.add(jLabel123);
        jLabel123.setBounds(660, 310, 40, 40);

        Menu.addTab("Fast food", fast_food);

        South_indian.setBackground(new java.awt.Color(40, 40, 40));
        South_indian.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        South_indian.setPreferredSize(new java.awt.Dimension(803, 568));
        South_indian.setLayout(null);

        chi_uth.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        chi_uth.setForeground(new java.awt.Color(0, 204, 0));
        chi_uth.setText("          Available");
        South_indian.add(chi_uth);
        chi_uth.setBounds(420, 460, 140, 30);

        pa_uth.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        pa_uth.setForeground(new java.awt.Color(0, 204, 0));
        pa_uth.setText("          Available");
        South_indian.add(pa_uth);
        pa_uth.setBounds(230, 460, 140, 30);

        nod_uth.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        nod_uth.setForeground(new java.awt.Color(0, 204, 0));
        nod_uth.setText("          Available");
        South_indian.add(nod_uth);
        nod_uth.setBounds(610, 290, 140, 20);

        co_uth.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        co_uth.setForeground(new java.awt.Color(0, 204, 0));
        co_uth.setText("          Available");
        South_indian.add(co_uth);
        co_uth.setBounds(420, 290, 140, 20);

        mi_uth.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        mi_uth.setForeground(new java.awt.Color(0, 204, 0));
        mi_uth.setText("          Available");
        South_indian.add(mi_uth);
        mi_uth.setBounds(230, 290, 140, 20);

        on_uth.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        on_uth.setForeground(new java.awt.Color(0, 204, 0));
        on_uth.setText("          Available");
        South_indian.add(on_uth);
        on_uth.setBounds(40, 290, 140, 20);

        sa_uth.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        sa_uth.setForeground(new java.awt.Color(0, 204, 0));
        sa_uth.setText("          Available");
        South_indian.add(sa_uth);
        sa_uth.setBounds(610, 110, 140, 30);

        ra_dosa.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        ra_dosa.setForeground(new java.awt.Color(0, 204, 0));
        ra_dosa.setText("          Available");
        South_indian.add(ra_dosa);
        ra_dosa.setBounds(420, 110, 140, 30);

        masa_dosa.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        masa_dosa.setForeground(new java.awt.Color(0, 204, 0));
        masa_dosa.setText("          Available");
        South_indian.add(masa_dosa);
        masa_dosa.setBounds(230, 110, 140, 30);

        sa_dosa.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        sa_dosa.setForeground(new java.awt.Color(0, 204, 0));
        sa_dosa.setText("          Available");
        South_indian.add(sa_dosa);
        sa_dosa.setBounds(40, 110, 140, 30);

        chil_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        chil_ord.setText("      Place Order");
        chil_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chil_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chil_ordMouseClicked(evt);
            }
        });
        South_indian.add(chil_ord);
        chil_ord.setBounds(420, 510, 140, 30);

        nod_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        nod_ord.setText("      Place Order");
        nod_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nod_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nod_ordMouseClicked(evt);
            }
        });
        South_indian.add(nod_ord);
        nod_ord.setBounds(610, 340, 140, 25);

        pa_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        pa_ord.setText("      Place Order");
        pa_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pa_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pa_ordMouseClicked(evt);
            }
        });
        South_indian.add(pa_ord);
        pa_ord.setBounds(230, 510, 140, 30);

        co_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        co_ord.setText("      Place Order");
        co_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        co_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                co_ordMouseClicked(evt);
            }
        });
        South_indian.add(co_ord);
        co_ord.setBounds(420, 340, 140, 25);

        mi_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        mi_ord.setText("      Place Order");
        mi_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mi_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mi_ordMouseClicked(evt);
            }
        });
        South_indian.add(mi_ord);
        mi_ord.setBounds(230, 340, 140, 25);

        on_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        on_ord.setText("      Place Order");
        on_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        on_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                on_ordMouseClicked(evt);
            }
        });
        South_indian.add(on_ord);
        on_ord.setBounds(40, 340, 140, 25);

        sa_uthord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        sa_uthord.setText("      Place Order");
        sa_uthord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sa_uthord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sa_uthordMouseClicked(evt);
            }
        });
        South_indian.add(sa_uthord);
        sa_uthord.setBounds(610, 170, 140, 20);

        ra_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        ra_ord.setText("      Place Order");
        ra_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ra_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ra_ordMouseClicked(evt);
            }
        });
        South_indian.add(ra_ord);
        ra_ord.setBounds(420, 170, 140, 20);

        ma_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        ma_ord.setText("      Place Order");
        ma_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ma_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                ma_ordMouseClicked(evt);
            }
        });
        South_indian.add(ma_ord);
        ma_ord.setBounds(230, 170, 140, 20);

        sada_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        sada_ord.setText("      Place Order");
        sada_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sada_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sada_ordMouseClicked(evt);
            }
        });
        South_indian.add(sada_ord);
        sada_ord.setBounds(40, 170, 140, 20);

        rava_dosa.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        rava_dosa.setForeground(new java.awt.Color(240, 240, 240));
        rava_dosa.setText("        25");
        rava_dosa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        rava_dosa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rava_dosaMouseClicked(evt);
            }
        });
        South_indian.add(rava_dosa);
        rava_dosa.setBounds(420, 140, 140, 25);

        masala_dosa.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        masala_dosa.setForeground(new java.awt.Color(240, 240, 240));
        masala_dosa.setText("         25");
        masala_dosa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        masala_dosa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masala_dosaMouseClicked(evt);
            }
        });
        South_indian.add(masala_dosa);
        masala_dosa.setBounds(230, 140, 140, 25);

        sada_uth.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        sada_uth.setForeground(new java.awt.Color(240, 240, 240));
        sada_uth.setText("         20");
        sada_uth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sada_uth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sada_uthMouseClicked(evt);
            }
        });
        South_indian.add(sada_uth);
        sada_uth.setBounds(600, 140, 160, 25);

        sada_dosa.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        sada_dosa.setForeground(new java.awt.Color(240, 240, 240));
        sada_dosa.setText("        20");
        sada_dosa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sada_dosa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sada_dosaMouseClicked(evt);
            }
        });
        South_indian.add(sada_dosa);
        sada_dosa.setBounds(40, 140, 140, 24);

        jLabel46.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel46.setForeground(new java.awt.Color(57, 147, 236));
        jLabel46.setText("Chilly");
        South_indian.add(jLabel46);
        jLabel46.setBounds(460, 400, 70, 30);

        jLabel47.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel47.setForeground(new java.awt.Color(57, 147, 236));
        jLabel47.setText("Uthappa");
        South_indian.add(jLabel47);
        jLabel47.setBounds(440, 430, 110, 30);

        jLabel45.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel45.setForeground(new java.awt.Color(57, 147, 236));
        jLabel45.setText("Palak Dosa");
        South_indian.add(jLabel45);
        jLabel45.setBounds(240, 400, 130, 30);

        jLabel44.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel44.setForeground(new java.awt.Color(57, 147, 236));
        jLabel44.setText("Uthappa");
        South_indian.add(jLabel44);
        jLabel44.setBounds(630, 250, 100, 30);

        jLabel43.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel43.setForeground(new java.awt.Color(57, 147, 236));
        jLabel43.setText("Noodle");
        South_indian.add(jLabel43);
        jLabel43.setBounds(640, 225, 80, 20);

        jLabel42.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel42.setForeground(new java.awt.Color(57, 147, 236));
        jLabel42.setText("Uthappa");
        South_indian.add(jLabel42);
        jLabel42.setBounds(440, 250, 100, 30);

        jLabel41.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel41.setForeground(new java.awt.Color(57, 147, 236));
        jLabel41.setText("Coconut");
        South_indian.add(jLabel41);
        jLabel41.setBounds(440, 225, 110, 20);

        jLabel40.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel40.setForeground(new java.awt.Color(57, 147, 236));
        jLabel40.setText("Uthappa");
        South_indian.add(jLabel40);
        jLabel40.setBounds(250, 250, 110, 30);

        jLabel38.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel38.setForeground(new java.awt.Color(57, 147, 236));
        jLabel38.setText(" Mini");
        South_indian.add(jLabel38);
        jLabel38.setBounds(270, 225, 60, 20);

        jLabel37.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel37.setForeground(new java.awt.Color(57, 147, 236));
        jLabel37.setText("Onion");
        South_indian.add(jLabel37);
        jLabel37.setBounds(70, 225, 70, 20);

        jLabel32.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel32.setForeground(new java.awt.Color(57, 147, 236));
        jLabel32.setText("Uthappa");
        South_indian.add(jLabel32);
        jLabel32.setBounds(640, 80, 100, 32);

        jLabel36.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel36.setForeground(new java.awt.Color(57, 147, 236));
        jLabel36.setText("Uthappa");
        South_indian.add(jLabel36);
        jLabel36.setBounds(60, 250, 100, 30);

        jLabel23.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel23.setForeground(new java.awt.Color(57, 147, 236));
        jLabel23.setText("Rava Dosa");
        South_indian.add(jLabel23);
        jLabel23.setBounds(430, 50, 116, 30);

        jLabel20.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(57, 147, 236));
        jLabel20.setText("Dosa");
        South_indian.add(jLabel20);
        jLabel20.setBounds(270, 80, 70, 32);

        jLabel22.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(57, 147, 236));
        jLabel22.setText(" Sada Dosa");
        South_indian.add(jLabel22);
        jLabel22.setBounds(40, 50, 140, 32);

        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel18);
        jLabel18.setBounds(30, 30, 160, 160);

        jLabel19.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(57, 147, 236));
        jLabel19.setText("    Masala");
        South_indian.add(jLabel19);
        jLabel19.setBounds(234, 50, 130, 30);

        abc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        abc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                abcMouseEntered(evt);
            }
        });
        South_indian.add(abc);
        abc.setBounds(220, 30, 160, 160);

        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel21);
        jLabel21.setBounds(410, 30, 162, 160);

        onio_uth.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        onio_uth.setForeground(new java.awt.Color(240, 240, 240));
        onio_uth.setText("        30");
        onio_uth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        onio_uth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onio_uthMouseClicked(evt);
            }
        });
        South_indian.add(onio_uth);
        onio_uth.setBounds(40, 315, 140, 25);

        jLabel35.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel35.setForeground(new java.awt.Color(57, 147, 236));
        jLabel35.setText("Sada ");
        South_indian.add(jLabel35);
        jLabel35.setBounds(650, 50, 80, 30);

        jLabel2.setText("jLabel2");
        South_indian.add(jLabel2);
        jLabel2.setBounds(80, 140, 34, 14);

        jLabel48.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel48);
        jLabel48.setBounds(600, 30, 160, 160);

        jLabel29.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel29);
        jLabel29.setBounds(30, 205, 160, 160);

        jLabel52.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel52.setForeground(new java.awt.Color(240, 240, 240));
        jLabel52.setText("       30");
        South_indian.add(jLabel52);
        jLabel52.setBounds(30, 320, 140, 25);

        mini_uth.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        mini_uth.setForeground(new java.awt.Color(240, 240, 240));
        mini_uth.setText("        20");
        mini_uth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mini_uth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mini_uthMouseClicked(evt);
            }
        });
        South_indian.add(mini_uth);
        mini_uth.setBounds(230, 310, 140, 30);

        coco_uth.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        coco_uth.setForeground(new java.awt.Color(240, 240, 240));
        coco_uth.setText("        35");
        coco_uth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        coco_uth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coco_uthMouseClicked(evt);
            }
        });
        South_indian.add(coco_uth);
        coco_uth.setBounds(420, 310, 140, 30);

        jLabel30.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel30);
        jLabel30.setBounds(220, 205, 160, 159);

        jLabel25.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel25);
        jLabel25.setBounds(410, 205, 160, 160);

        palak_dosa.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        palak_dosa.setForeground(new java.awt.Color(240, 240, 240));
        palak_dosa.setText("        30");
        palak_dosa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        palak_dosa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                palak_dosaMouseClicked(evt);
            }
        });
        South_indian.add(palak_dosa);
        palak_dosa.setBounds(230, 488, 140, 25);

        nood_uth.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        nood_uth.setForeground(new java.awt.Color(240, 240, 240));
        nood_uth.setText("        35");
        nood_uth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nood_uth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nood_uthMouseClicked(evt);
            }
        });
        South_indian.add(nood_uth);
        nood_uth.setBounds(610, 310, 140, 30);

        jLabel28.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel28);
        jLabel28.setBounds(600, 205, 160, 160);

        chilly_uth.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        chilly_uth.setForeground(new java.awt.Color(240, 240, 240));
        chilly_uth.setText("        35");
        chilly_uth.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chilly_uth.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chilly_uthMouseClicked(evt);
            }
        });
        South_indian.add(chilly_uth);
        chilly_uth.setBounds(420, 485, 140, 30);

        jLabel31.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel31);
        jLabel31.setBounds(220, 380, 160, 159);

        jLabel27.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Blue.jpg"))); // NOI18N
        South_indian.add(jLabel27);
        jLabel27.setBounds(410, 380, 160, 159);

        Menu.addTab("South Indian", South_indian);

        chinese_lunch.setBackground(new java.awt.Color(40, 40, 40));
        chinese_lunch.setLayout(null);

        c_m.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        c_m.setForeground(new java.awt.Color(0, 204, 0));
        c_m.setText("          Available");
        chinese_lunch.add(c_m);
        c_m.setBounds(420, 460, 140, 30);

        spl_lunch.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        spl_lunch.setForeground(new java.awt.Color(0, 204, 0));
        spl_lunch.setText("          Available");
        chinese_lunch.add(spl_lunch);
        spl_lunch.setBounds(230, 460, 140, 30);

        c_lunch.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        c_lunch.setForeground(new java.awt.Color(0, 204, 0));
        c_lunch.setText("          Available");
        chinese_lunch.add(c_lunch);
        c_lunch.setBounds(610, 290, 140, 19);

        pur_bhaj.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        pur_bhaj.setForeground(new java.awt.Color(0, 204, 0));
        pur_bhaj.setText("          Available");
        chinese_lunch.add(pur_bhaj);
        pur_bhaj.setBounds(420, 290, 140, 20);

        man.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        man.setForeground(new java.awt.Color(0, 204, 0));
        man.setText("          Available");
        chinese_lunch.add(man);
        man.setBounds(230, 290, 140, 20);

        schz_nod.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        schz_nod.setForeground(new java.awt.Color(0, 204, 0));
        schz_nod.setText("          Available");
        chinese_lunch.add(schz_nod);
        schz_nod.setBounds(40, 290, 140, 20);

        schz.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        schz.setForeground(new java.awt.Color(0, 204, 0));
        schz.setText("          Available");
        chinese_lunch.add(schz);
        schz.setBounds(610, 110, 140, 30);

        manch.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        manch.setForeground(new java.awt.Color(0, 204, 0));
        manch.setText("          Available");
        chinese_lunch.add(manch);
        manch.setBounds(420, 110, 140, 30);

        noodles.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        noodles.setForeground(new java.awt.Color(0, 204, 0));
        noodles.setText("          Available");
        chinese_lunch.add(noodles);
        noodles.setBounds(230, 110, 140, 30);

        rice.setFont(new java.awt.Font("SansSerif", 1, 14)); // NOI18N
        rice.setForeground(new java.awt.Color(0, 204, 0));
        rice.setText("          Available");
        chinese_lunch.add(rice);
        rice.setBounds(40, 109, 140, 30);

        chana_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        chana_ord.setText("      Place Order");
        chana_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chana_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chana_ordMouseClicked(evt);
            }
        });
        chinese_lunch.add(chana_ord);
        chana_ord.setBounds(420, 520, 140, 20);

        sp_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        sp_ord.setText("      Place Order");
        sp_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sp_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sp_ordMouseClicked(evt);
            }
        });
        chinese_lunch.add(sp_ord);
        sp_ord.setBounds(230, 520, 140, 20);

        chin_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        chin_ord.setText("      Place Order");
        chin_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        chin_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chin_ordMouseClicked(evt);
            }
        });
        chinese_lunch.add(chin_ord);
        chin_ord.setBounds(610, 340, 140, 25);

        pbhaji_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        pbhaji_ord.setText("      Place Order");
        pbhaji_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        pbhaji_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pbhaji_ordMouseClicked(evt);
            }
        });
        chinese_lunch.add(pbhaji_ord);
        pbhaji_ord.setBounds(420, 340, 140, 25);

        mancho_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        mancho_ord.setText("      Place Order");
        mancho_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mancho_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mancho_ordMouseClicked(evt);
            }
        });
        chinese_lunch.add(mancho_ord);
        mancho_ord.setBounds(230, 340, 140, 25);

        schznood_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        schznood_ord.setText("      Place Order");
        schznood_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        schznood_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schznood_ordMouseClicked(evt);
            }
        });
        chinese_lunch.add(schznood_ord);
        schznood_ord.setBounds(40, 340, 140, 25);

        schz_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        schz_ord.setText("      Place Order");
        schz_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        schz_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schz_ordMouseClicked(evt);
            }
        });
        chinese_lunch.add(schz_ord);
        schz_ord.setBounds(610, 170, 140, 20);

        manch_ord.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        manch_ord.setText("      Place Order");
        manch_ord.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        manch_ord.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manch_ordMouseClicked(evt);
            }
        });
        chinese_lunch.add(manch_ord);
        manch_ord.setBounds(420, 170, 140, 20);

        nood_order.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        nood_order.setText("      Place Order");
        nood_order.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        nood_order.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                nood_orderMouseClicked(evt);
            }
        });
        chinese_lunch.add(nood_order);
        nood_order.setBounds(230, 170, 140, 20);

        f_riceorder.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        f_riceorder.setText("      Place Order");
        f_riceorder.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f_riceorder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f_riceorderMouseClicked(evt);
            }
        });
        chinese_lunch.add(f_riceorder);
        f_riceorder.setBounds(40, 170, 140, 20);

        f_rice.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        f_rice.setForeground(new java.awt.Color(240, 240, 240));
        f_rice.setText("         25");
        f_rice.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        f_rice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f_riceMouseClicked(evt);
            }
        });
        chinese_lunch.add(f_rice);
        f_rice.setBounds(36, 140, 150, 25);

        jLabel93.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel93.setForeground(new java.awt.Color(63, 210, 0));
        jLabel93.setText(" Veg.");
        chinese_lunch.add(jLabel93);
        jLabel93.setBounds(79, 50, 60, 30);

        jLabel94.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel94.setForeground(new java.awt.Color(63, 210, 0));
        jLabel94.setText("Fried Rice");
        chinese_lunch.add(jLabel94);
        jLabel94.setBounds(50, 80, 120, 30);

        jLabel92.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel92.setForeground(new java.awt.Color(63, 210, 0));
        jLabel92.setText("Noodles");
        chinese_lunch.add(jLabel92);
        jLabel92.setBounds(260, 80, 90, 30);

        h_noodles.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        h_noodles.setForeground(new java.awt.Color(240, 240, 240));
        h_noodles.setText("        25");
        h_noodles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h_noodlesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                h_noodlesMouseEntered(evt);
            }
        });
        chinese_lunch.add(h_noodles);
        h_noodles.setBounds(226, 140, 150, 25);

        jLabel96.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel96.setForeground(new java.awt.Color(63, 210, 0));
        jLabel96.setText(" Hakka");
        chinese_lunch.add(jLabel96);
        jLabel96.setBounds(260, 50, 80, 30);

        jLabel69.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel69);
        jLabel69.setBounds(30, 30, 160, 160);

        jLabel74.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel74);
        jLabel74.setBounds(220, 30, 160, 160);

        jLabel97.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel97.setForeground(new java.awt.Color(63, 210, 0));
        jLabel97.setText(" Manchurian");
        chinese_lunch.add(jLabel97);
        jLabel97.setBounds(420, 80, 140, 30);

        manchurian.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        manchurian.setForeground(new java.awt.Color(240, 240, 240));
        manchurian.setText("        35");
        manchurian.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                manchurianMouseClicked(evt);
            }
        });
        chinese_lunch.add(manchurian);
        manchurian.setBounds(420, 140, 140, 25);

        jLabel98.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel98.setForeground(new java.awt.Color(63, 210, 0));
        jLabel98.setText("Veg.");
        chinese_lunch.add(jLabel98);
        jLabel98.setBounds(470, 50, 49, 30);

        jLabel84.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel84);
        jLabel84.setBounds(410, 30, 160, 160);

        jLabel99.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel99.setForeground(new java.awt.Color(63, 210, 0));
        jLabel99.setText("Rice");
        chinese_lunch.add(jLabel99);
        jLabel99.setBounds(650, 80, 50, 30);

        schz_rice.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        schz_rice.setForeground(new java.awt.Color(240, 240, 240));
        schz_rice.setText("        30");
        schz_rice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schz_riceMouseClicked(evt);
            }
        });
        chinese_lunch.add(schz_rice);
        schz_rice.setBounds(610, 140, 140, 25);

        jLabel101.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel101.setForeground(new java.awt.Color(63, 210, 0));
        jLabel101.setText("Schezwan");
        chinese_lunch.add(jLabel101);
        jLabel101.setBounds(620, 50, 130, 30);

        jLabel102.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel102.setForeground(new java.awt.Color(63, 210, 0));
        jLabel102.setText("Manchow");
        chinese_lunch.add(jLabel102);
        jLabel102.setBounds(250, 225, 110, 30);

        jLabel79.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel79);
        jLabel79.setBounds(600, 30, 160, 160);

        schz_noodles.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        schz_noodles.setForeground(new java.awt.Color(240, 240, 240));
        schz_noodles.setText("        35");
        schz_noodles.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                schz_noodlesMouseClicked(evt);
            }
        });
        chinese_lunch.add(schz_noodles);
        schz_noodles.setBounds(40, 310, 140, 32);

        jLabel104.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel104.setForeground(new java.awt.Color(63, 210, 0));
        jLabel104.setText("Schezwan");
        chinese_lunch.add(jLabel104);
        jLabel104.setBounds(50, 225, 120, 30);

        jLabel105.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel105.setForeground(new java.awt.Color(63, 210, 0));
        jLabel105.setText("Noodles");
        chinese_lunch.add(jLabel105);
        jLabel105.setBounds(60, 255, 90, 30);

        jLabel83.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel83);
        jLabel83.setBounds(30, 205, 160, 160);

        man_soup.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        man_soup.setForeground(new java.awt.Color(240, 240, 240));
        man_soup.setText("        40");
        man_soup.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                man_soupMouseClicked(evt);
            }
        });
        chinese_lunch.add(man_soup);
        man_soup.setBounds(230, 310, 140, 30);

        jLabel107.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel107.setForeground(new java.awt.Color(63, 210, 0));
        jLabel107.setText(" Soup");
        chinese_lunch.add(jLabel107);
        jLabel107.setBounds(260, 255, 80, 30);

        jLabel108.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel108.setForeground(new java.awt.Color(63, 210, 0));
        jLabel108.setText(" Puri Bhaji");
        chinese_lunch.add(jLabel108);
        jLabel108.setBounds(430, 230, 120, 30);

        jLabel85.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel85);
        jLabel85.setBounds(220, 205, 160, 160);

        puri.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        puri.setForeground(new java.awt.Color(240, 240, 240));
        puri.setText("        25");
        puri.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                puriMouseClicked(evt);
            }
        });
        chinese_lunch.add(puri);
        puri.setBounds(420, 310, 140, 30);

        jLabel86.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel86);
        jLabel86.setBounds(410, 205, 160, 160);

        jLabel110.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel110.setForeground(new java.awt.Color(63, 210, 0));
        jLabel110.setText("Lunch");
        chinese_lunch.add(jLabel110);
        jLabel110.setBounds(650, 260, 67, 30);

        lunch.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        lunch.setForeground(new java.awt.Color(255, 255, 255));
        lunch.setText("        50");
        lunch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lunchMouseClicked(evt);
            }
        });
        chinese_lunch.add(lunch);
        lunch.setBounds(610, 310, 140, 30);

        jLabel112.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel112.setForeground(new java.awt.Color(63, 210, 0));
        jLabel112.setText("Lunch");
        chinese_lunch.add(jLabel112);
        jLabel112.setBounds(270, 430, 70, 30);

        jLabel113.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel113.setForeground(new java.awt.Color(63, 210, 0));
        jLabel113.setText(" Chinese");
        chinese_lunch.add(jLabel113);
        jLabel113.setBounds(628, 230, 100, 30);

        jLabel87.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel87);
        jLabel87.setBounds(600, 205, 160, 160);

        sp_lunch.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        sp_lunch.setForeground(new java.awt.Color(240, 240, 240));
        sp_lunch.setText("        45");
        sp_lunch.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sp_lunchMouseClicked(evt);
            }
        });
        chinese_lunch.add(sp_lunch);
        sp_lunch.setBounds(230, 490, 140, 25);

        jLabel116.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel116.setForeground(new java.awt.Color(63, 210, 0));
        jLabel116.setText("Special");
        chinese_lunch.add(jLabel116);
        jLabel116.setBounds(260, 400, 80, 30);

        jLabel115.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel115.setForeground(new java.awt.Color(63, 210, 0));
        jLabel115.setText("Chana ");
        chinese_lunch.add(jLabel115);
        jLabel115.setBounds(450, 400, 80, 30);

        chana.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        chana.setForeground(new java.awt.Color(240, 240, 240));
        chana.setText("       20");
        chana.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chanaMouseClicked(evt);
            }
        });
        chinese_lunch.add(chana);
        chana.setBounds(420, 490, 140, 25);

        jLabel118.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel118.setForeground(new java.awt.Color(63, 210, 0));
        jLabel118.setText("Masala");
        chinese_lunch.add(jLabel118);
        jLabel118.setBounds(450, 430, 80, 30);

        jLabel88.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel88);
        jLabel88.setBounds(220, 380, 160, 160);

        jLabel89.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Green.jpg"))); // NOI18N
        chinese_lunch.add(jLabel89);
        jLabel89.setBounds(410, 380, 160, 160);

        sada_ord4.setFont(new java.awt.Font("SansSerif", 1, 16)); // NOI18N
        sada_ord4.setText("      Place Order");
        sada_ord4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sada_ord4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sada_ord4MouseClicked(evt);
            }
        });
        chinese_lunch.add(sada_ord4);
        sada_ord4.setBounds(230, 170, 140, 20);

        Menu.addTab("Chinese and Lunches", chinese_lunch);

        beverages.setBackground(new java.awt.Color(40, 40, 40));
        beverages.setLayout(null);

        c_drinks.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        c_drinks.setForeground(new java.awt.Color(240, 240, 240));
        c_drinks.setText("       15");
        c_drinks.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                c_drinksMouseClicked(evt);
            }
        });
        beverages.add(c_drinks);
        c_drinks.setBounds(40, 140, 140, 25);

        jLabel121.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel121.setForeground(new java.awt.Color(255, 204, 0));
        jLabel121.setText(" Cold Drinks");
        beverages.add(jLabel121);
        jLabel121.setBounds(40, 50, 140, 30);

        coffee.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        coffee.setForeground(new java.awt.Color(240, 240, 240));
        coffee.setText("        10");
        coffee.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                coffeeMouseClicked(evt);
            }
        });
        beverages.add(coffee);
        coffee.setBounds(416, 140, 150, 25);

        jLabel122.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel122.setForeground(new java.awt.Color(255, 204, 0));
        jLabel122.setText("Tea");
        beverages.add(jLabel122);
        jLabel122.setBounds(270, 50, 50, 30);

        jLabel68.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        jLabel68.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel68MouseClicked(evt);
            }
        });
        beverages.add(jLabel68);
        jLabel68.setBounds(30, 30, 160, 160);

        h_choc.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        h_choc.setForeground(new java.awt.Color(240, 240, 240));
        h_choc.setText("        20");
        h_choc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                h_chocMouseClicked(evt);
            }
        });
        beverages.add(h_choc);
        h_choc.setBounds(610, 140, 140, 25);

        jLabel125.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel125.setForeground(new java.awt.Color(255, 204, 0));
        jLabel125.setText("Coffee");
        beverages.add(jLabel125);
        jLabel125.setBounds(450, 50, 70, 30);

        tea.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        tea.setForeground(new java.awt.Color(240, 240, 240));
        tea.setText("       05");
        tea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                teaMouseClicked(evt);
            }
        });
        beverages.add(tea);
        tea.setBounds(236, 140, 130, 25);

        jLabel91.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        beverages.add(jLabel91);
        jLabel91.setBounds(220, 30, 160, 160);

        jLabel126.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel126.setForeground(new java.awt.Color(255, 204, 0));
        jLabel126.setText(" Chocolate");
        beverages.add(jLabel126);
        jLabel126.setBounds(620, 80, 120, 30);

        jLabel127.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel127.setForeground(new java.awt.Color(255, 204, 0));
        jLabel127.setText("Hot");
        beverages.add(jLabel127);
        jLabel127.setBounds(660, 50, 50, 32);

        jLabel95.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        beverages.add(jLabel95);
        jLabel95.setBounds(410, 30, 160, 160);

        jLabel128.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel128.setForeground(new java.awt.Color(255, 204, 0));
        jLabel128.setText("Fruit Juice");
        beverages.add(jLabel128);
        jLabel128.setBounds(240, 220, 120, 32);

        milk_s.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        milk_s.setForeground(new java.awt.Color(240, 240, 240));
        milk_s.setText("        30");
        milk_s.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                milk_sMouseClicked(evt);
            }
        });
        beverages.add(milk_s);
        milk_s.setBounds(40, 315, 140, 25);

        jLabel100.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        beverages.add(jLabel100);
        jLabel100.setBounds(600, 30, 160, 160);

        jLabel142.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel142.setForeground(new java.awt.Color(255, 204, 0));
        jLabel142.setText(" Milk Shakes");
        beverages.add(jLabel142);
        jLabel142.setBounds(40, 220, 140, 32);

        jLabel103.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        beverages.add(jLabel103);
        jLabel103.setBounds(30, 205, 160, 160);

        f_juice.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        f_juice.setForeground(new java.awt.Color(240, 240, 240));
        f_juice.setText("        25");
        f_juice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                f_juiceMouseClicked(evt);
            }
        });
        beverages.add(f_juice);
        f_juice.setBounds(230, 315, 140, 25);

        jLabel155.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel155.setForeground(new java.awt.Color(255, 204, 0));
        jLabel155.setText("Lassi");
        beverages.add(jLabel155);
        jLabel155.setBounds(460, 220, 70, 32);

        jLabel106.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        beverages.add(jLabel106);
        jLabel106.setBounds(220, 205, 160, 160);

        lassi.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        lassi.setForeground(new java.awt.Color(240, 240, 240));
        lassi.setText("       20");
        lassi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lassiMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lassiMouseEntered(evt);
            }
        });
        beverages.add(lassi);
        lassi.setBounds(426, 315, 140, 25);

        jLabel157.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel157.setForeground(new java.awt.Color(255, 204, 0));
        jLabel157.setText("Vegetable");
        beverages.add(jLabel157);
        jLabel157.setBounds(620, 220, 130, 32);

        jLabel109.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        beverages.add(jLabel109);
        jLabel109.setBounds(410, 205, 160, 160);

        veg_juice.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        veg_juice.setForeground(new java.awt.Color(240, 240, 240));
        veg_juice.setText("       30");
        veg_juice.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                veg_juiceMouseClicked(evt);
            }
        });
        beverages.add(veg_juice);
        veg_juice.setBounds(616, 315, 130, 25);

        jLabel159.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel159.setForeground(new java.awt.Color(255, 204, 0));
        jLabel159.setText("Juice");
        beverages.add(jLabel159);
        jLabel159.setBounds(650, 250, 60, 32);

        jLabel160.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel160.setForeground(new java.awt.Color(255, 204, 0));
        jLabel160.setText("  Chaas");
        beverages.add(jLabel160);
        jLabel160.setBounds(250, 402, 110, 20);

        jLabel111.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        beverages.add(jLabel111);
        jLabel111.setBounds(600, 205, 160, 159);

        chaas.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        chaas.setForeground(new java.awt.Color(240, 240, 240));
        chaas.setText("       10");
        chaas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chaasMouseClicked(evt);
            }
        });
        beverages.add(chaas);
        chaas.setBounds(236, 490, 130, 25);

        jLabel114.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        jLabel114.setToolTipText("");
        beverages.add(jLabel114);
        jLabel114.setBounds(220, 380, 160, 159);

        jLabel162.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        jLabel162.setForeground(new java.awt.Color(255, 204, 0));
        jLabel162.setText("Rio");
        beverages.add(jLabel162);
        jLabel162.setBounds(470, 402, 50, 20);

        rio.setFont(new java.awt.Font("SansSerif", 0, 24)); // NOI18N
        rio.setForeground(new java.awt.Color(240, 240, 240));
        rio.setText("        25");
        rio.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                rioMouseClicked(evt);
            }
        });
        beverages.add(rio);
        rio.setBounds(420, 490, 140, 25);

        jLabel117.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Yellow1.jpg"))); // NOI18N
        beverages.add(jLabel117);
        jLabel117.setBounds(410, 380, 160, 160);

        Menu.addTab("Beverages", beverages);

        Base.add(Menu, "card2");

        acc_settings.setBackground(new java.awt.Color(40, 40, 40));
        acc_settings.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        acc_settings.setPreferredSize(new java.awt.Dimension(803, 568));
        acc_settings.setLayout(null);

        acc_create.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        acc_create.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Create.jpg"))); // NOI18N
        acc_create.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(40, 40, 40)));
        acc_create.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        acc_create.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                acc_createMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                acc_createMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                acc_createMouseExited(evt);
            }
        });
        acc_settings.add(acc_create);
        acc_create.setBounds(50, 170, 300, 170);

        del_acc.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        del_acc.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/Delete.jpg"))); // NOI18N
        del_acc.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(40, 40, 40)));
        del_acc.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        del_acc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                del_accMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                del_accMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                del_accMouseExited(evt);
            }
        });
        acc_settings.add(del_acc);
        del_acc.setBounds(430, 170, 300, 170);

        jLabel146.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel146.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/account.jpg"))); // NOI18N
        acc_settings.add(jLabel146);
        jLabel146.setBounds(180, 20, 510, 80);

        Base.add(acc_settings, "card3");

        getContentPane().add(Base);
        Base.setBounds(240, 110, 810, 590);

        jLabel143.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/ez 3.jpg"))); // NOI18N
        getContentPane().add(jLabel143);
        jLabel143.setBounds(290, 0, 730, 110);

        mini.setIcon(new javax.swing.ImageIcon(getClass().getResource("/labels/min.jpg"))); // NOI18N
        mini.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        mini.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                miniMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                miniMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                miniMouseExited(evt);
            }
        });
        getContentPane().add(mini);
        mini.setBounds(1290, 10, 20, 20);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
      public void close()
    {
     WindowEvent winClosingEvent = new WindowEvent(this,WindowEvent.WINDOW_CLOSING);
     Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
     }
    private void close1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close1MouseClicked
        System.exit(0);
        
    }//GEN-LAST:event_close1MouseClicked

    private void clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseClicked
        // TODO add your handling code here:
        if(main1.getText().equals(""))
            JOptionPane.showMessageDialog(null,"The board is cleared already .","EZCanteen",2);
        else
      clearBoard();
        setStatus();
    }//GEN-LAST:event_clearMouseClicked

    private void gen_billMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gen_billMouseClicked
       if(amt==0)
          JOptionPane.showMessageDialog(null,"Sorry no items have been ordered yet .","EZCanteen",2);
      else
       {
           setStatus();
           g_total.setText(""+amt);
           amt=0;
        
        int x = JOptionPane.showConfirmDialog(null,"Does the user have an Account ","EZCanteen",JOptionPane.YES_NO_OPTION, 3);
     
     if(x==0)
     {
       Base.removeAll();
       Base.repaint();
       Base.revalidate();
       
       Base.add(Deduct_amt);
       Base.repaint();
       Base.revalidate();
       bill_ge.setText(g_total.getText());
        
     }
       
     else
     {
              /* try {
                   //code to print the bill directly
                   
                   String l1 = main1.getText()+"           "+c1.getText()+"         "+p01.getText()+"         "+t1.getText();
                   String l2 = main2.getText()+"           "+c2.getText()+"         "+p2.getText()+"          "+t2.getText();
                   String l3 = main3.getText()+"           "+c3.getText()+"         "+p3.getText()+"          "+t3.getText();
                   String l4 = main4.getText()+"           "+c4.getText()+"         "+p4.getText()+"          "+t4.getText();
                   String l5 = main5.getText()+"           "+c5.getText()+"         "+p5.getText()+"          "+t5.getText();
                   String l6 = main6.getText()+"           "+c6.getText()+"         "+p6.getText()+"          "+t6.getText();
                   String gt =g_total.getText();
                   //  String date =date_lbl.getText();
                   // String datec = date_s.concat(date);
                   //Item            cost          plate             Total
                   jTextArea1.setText("\t Item                     cost         plate          Total\n\t"+l1+"\n\t"+l2+"\n\t"+l3+"\n\t"+l4+"\n\t"+l5+"\n\t"+l6+"\n\n\t ----------------------------------------------------\n\tGrand Total\t\t"+gt);
                   MessageFormat header = new MessageFormat("BILL");
                   
                   MessageFormat footer = new MessageFormat("No{0,number,integer}");
                   
                   jTextArea1.print(header,footer);
                
               } catch (PrinterException ex) {
                   Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
               }*/
         
            JOptionPane.showMessageDialog(null,"The order has been placed successfully.","EZCanteen",1);
                   clearBoard();
     }
       }
    }//GEN-LAST:event_gen_billMouseClicked
      
   public void setStatus()
   {
      
        
            //code for getting the quantity of the item Vada PAV in qty variable
           int qty=0;
         try {
           
            //code for getting the quantity of the item in a 'qty' variable;
            
            String itm="Potato Vada";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                
            
       
       
       
       
            if(qty>0&&qty<=5)
            {
                p_vada.setText("           Critical");
                p_vada.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                p_vada.setText("        Unavailable");
                p_vada.setForeground(Color.red);
            }
            else
            {
                p_vada.setText("         Available");
                p_vada.setForeground(Color.GREEN);
            }
            }
        
            
            
            
            
            
            
//code for getting the QUANTITY of UPMA
          
         
          
            //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Upma";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                up_ma.setText("           Critical");
                up_ma.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                up_ma.setText("        Unavailable");
                up_ma.setForeground(Color.red);
            }
            else
            {
                up_ma.setText("         Available");
                up_ma.setForeground(Color.GREEN);
            }
              
            
            
//CODE FOR GETTING THE QUANTITY OF POHA
            
              
             itm="Poha";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
            if(qty>0&&qty<5)
            {
                po_ha.setText("           Critical");
                po_ha.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
                po_ha.setText("        Unavailable");
                po_ha.setForeground(Color.red);
            }
            else
            {
                po_ha.setText("         Available");
                po_ha.setForeground(Color.GREEN);
            }  
           
//CODE FOR GETTING THE QUANTITY VALUE FOR MISAL
               
             itm="Misal";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
                mi_sal.setText("           Critical");
                mi_sal.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                mi_sal.setText("        Unavailable");
                mi_sal.setForeground(Color.red);
            }
            else
            {
                mi_sal.setText("         Available");
                mi_sal.setForeground(Color.GREEN);
            }
         
              
              //CODE FOR GETTING THE QUANTITY VALUE FOR USAL
         
            itm="Usal";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
                u_sal.setText("           Critical");
                u_sal.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
                u_sal.setText("        Unavailable");
                u_sal.setForeground(Color.red);
            }
            else
            {
                u_sal.setText("         Available");
                u_sal.setForeground(Color.GREEN);
            }
         
         
         
                   
              //CODE FOR GETTING THE QUANTITY VALUE FOR Punjabi Samosa
         
            itm="Punjabi Samosa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
                sa_mosa.setText("           Critical");
               sa_mosa.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
               sa_mosa.setText("        Unavailable");
               sa_mosa.setForeground(Color.red);
            }
            else
            {
                sa_mosa.setText("         Available");
                sa_mosa.setForeground(Color.GREEN);
            }
         
         
         
         
         
                   
              //CODE FOR GETTING THE QUANTITY VALUE FOR Bread Butter
              
         
            itm="Bread Butter";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
                bre_but.setText("           Critical");
              bre_but.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
              bre_but.setText("        Unavailable");
               bre_but.setForeground(Color.red);
            }
            else
            {
               bre_but.setText("         Available");
                bre_but.setForeground(Color.GREEN);
            }
         
             
                   
              //CODE FOR GETTING THE QUANTITY VALUE FOR Veg.Sandwich
              
         
            itm="Veg. Sandwich";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
               sandwich.setText("           Critical");
              sandwich.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
              sandwich.setText("        Unavailable");
              sandwich.setForeground(Color.red);
            }
            else
            {
               sandwich.setText("         Available");
               sandwich.setForeground(Color.GREEN);
            }
         
         
             
                   
              //CODE FOR GETTING THE QUANTITY VALUE FOR Ragda Pattice
              
         
            itm="Ragda Pattice";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
                ragda.setText("           Critical");
              ragda.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
            ragda.setText("        Unavailable");
              ragda.setForeground(Color.red);
            }
            else
            {
               ragda.setText("         Available");
                ragda.setForeground(Color.GREEN);
            }
         
         
             
                   
              //CODE FOR GETTING THE QUANTITY VALUE FOR Dahi kachori
              
         
            itm="Dahi Kachori";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
               dahi.setText("           Critical");
             dahi.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
             dahi.setText("        Unavailable");
              dahi.setForeground(Color.red);
            }
            else
            {
               dahi.setText("         Available");
               dahi.setForeground(Color.GREEN);
            }
        
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Sada Dosa
              
         
            itm="Sada Dosa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
               sa_dosa.setText("           Critical");
             sa_dosa.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
            sa_dosa.setText("        Unavailable");
            sa_dosa.setForeground(Color.red);
            }
            else
            {
              sa_dosa.setText("         Available");
              sa_dosa.setForeground(Color.GREEN);
            }
        
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Masala Dosa
              
         
            itm="Masala Dosa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
              masa_dosa.setText("           Critical");
             masa_dosa.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
             masa_dosa.setText("        Unavailable");
              masa_dosa.setForeground(Color.red);
            }
            else
            {
              masa_dosa.setText("         Available");
               masa_dosa.setForeground(Color.GREEN);
            }
        
         
         
         
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Rava Dosa
              
         
            itm="Rava Dosa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
               ra_dosa.setText("           Critical");
             ra_dosa.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
             ra_dosa.setText("        Unavailable");
             ra_dosa.setForeground(Color.red);
            }
            else
            {
               ra_dosa.setText("         Available");
               ra_dosa.setForeground(Color.GREEN);
            }
        
         
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Dahi kachori
              
         
            itm="Sada Uthappa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
               sa_uth.setText("           Critical");
            sa_uth.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
             sa_uth.setText("        Unavailable");
            sa_uth.setForeground(Color.red);
            }
            else
            {
               sa_uth.setText("         Available");
              sa_uth.setForeground(Color.GREEN);
            }
        
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Onion Uthappa
              
         
            itm="Onion Uthappa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
              on_uth.setText("           Critical");
             on_uth.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
            on_uth.setText("        Unavailable");
              on_uth.setForeground(Color.red);
            }
            else
            {
               on_uth.setText("         Available");
              on_uth.setForeground(Color.GREEN);
            }
        
         
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Mini Uthappa
              
         
            itm="Mini Uthappa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
              mi_uth.setText("           Critical");
            mi_uth.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
            mi_uth.setText("        Unavailable");
              mi_uth.setForeground(Color.red);
            }
            else
            {
              mi_uth.setText("         Available");
              mi_uth.setForeground(Color.GREEN);
            }
        
         
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Coconut Uthappa
              
         
            itm="Coconut Uthappa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
              co_uth.setText("           Critical");
             co_uth.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
             co_uth.setText("        Unavailable");
              co_uth.setForeground(Color.red);
            }
            else
            {
               co_uth.setText("         Available");
               co_uth.setForeground(Color.GREEN);
            }
        
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Noodle Uthappa
              
         
            itm="Noodle Uthappa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
               nod_uth.setText("           Critical");
             nod_uth.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
             nod_uth.setText("        Unavailable");
              nod_uth.setForeground(Color.red);
            }
            else
            {
               nod_uth.setText("         Available");
               nod_uth.setForeground(Color.GREEN);
            }
        
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Palak Dosa
         
            itm="Palak Dosa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
               pa_uth.setText("           Critical");
             pa_uth.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
             pa_uth.setText("        Unavailable");
              pa_uth.setForeground(Color.red);
            }
            else
            {
               pa_uth.setText("         Available");
               pa_uth.setForeground(Color.GREEN);
            }
        
                    
              //CODE FOR GETTING THE QUANTITY VALUE FOR Chilly Uthappa
         
            itm="Chilly Uthappa";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            
              if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
            
              if(qty>0&&qty<5)
            {
               chi_uth.setText("           Critical");
             chi_uth.setForeground(Color.ORANGE);
            }
            
            else if(qty==0)
            {
             chi_uth.setText("        Unavailable");
              chi_uth.setForeground(Color.red);
            }
            else
            {
               chi_uth.setText("         Available");
               chi_uth.setForeground(Color.GREEN);
            }
        
         
         
           //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Veg. Fried Rice";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                rice.setText("           Critical");
                rice.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                rice.setText("        Unavailable");
                rice.setForeground(Color.red);
            }
            else
            {
                rice.setText("         Available");
                rice.setForeground(Color.GREEN);
            }
              
         
         
           //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Hakka Noodles";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                noodles.setText("           Critical");
                noodles.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                noodles.setText("        Unavailable");
                noodles.setForeground(Color.red);
            }
            else
            {
                noodles.setText("         Available");
                noodles.setForeground(Color.GREEN);
            }
              
           //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Veg. Manchurian";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                manch.setText("           Critical");
                manch.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                manch.setText("        Unavailable");
                manch.setForeground(Color.red);
            }
            else
            {
                manch.setText("         Available");
                manch.setForeground(Color.GREEN);
            }
              
         
           //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Schezwan Rice";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                schz.setText("           Critical");
                schz.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                schz.setText("        Unavailable");
                schz.setForeground(Color.red);
            }
            else
            {
                schz.setText("         Available");
                schz.setForeground(Color.GREEN);
            }
              
            
               //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Schezwan Noodles";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                schz_nod.setText("           Critical");
                schz_nod.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                schz_nod.setText("        Unavailable");
                schz_nod.setForeground(Color.red);
            }
            else
            {
                schz_nod.setText("         Available");
                schz_nod.setForeground(Color.GREEN);
            }
              
             
               //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Manchow Soup";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                man.setText("           Critical");
                man.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                man.setText("        Unavailable");
                man.setForeground(Color.red);
            }
            else
            {
                man.setText("         Available");
                man.setForeground(Color.GREEN);
            }
              
             
               //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Puri Bhaji";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                pur_bhaj.setText("           Critical");
                pur_bhaj.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
               pur_bhaj.setText("        Unavailable");
               pur_bhaj.setForeground(Color.red);
            }
            else
            {
                pur_bhaj.setText("         Available");
                pur_bhaj.setForeground(Color.GREEN);
            }
              
            
             
               //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Chinese Lunch";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                c_lunch.setText("           Critical");
                c_lunch.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                c_lunch.setText("        Unavailable");
                c_lunch.setForeground(Color.red);
            }
            else
            {
                c_lunch.setText("         Available");
                c_lunch.setForeground(Color.GREEN);
            }
              
            
               //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Special Lunch";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                spl_lunch.setText("           Critical");
                spl_lunch.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                spl_lunch.setText("        Unavailable");
                spl_lunch.setForeground(Color.red);
            }
            else
            {
                spl_lunch.setText("         Available");
                spl_lunch.setForeground(Color.GREEN);
            }
              
                 //code for getting the quantity of the item in a 'qty' variable;
            
             itm="Chana Masala";
             qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                 //System.out.print(qty);
            }//query to retrieve the qty
         
         
            if(qty>0&&qty<5)
            {
                c_m.setText("           Critical");
                c_m.setForeground(Color.orange);
            }
            
            else if(qty==0)
            {
                c_m.setText("        Unavailable");
                c_m.setForeground(Color.red);
            }
            else
            {
                c_m.setText("         Available");
                c_m.setForeground(Color.GREEN);
            }
              
             
         
         }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
             }
         finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
         
          
       
        
       
   }
    
    private void billboardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_billboardMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_billboardMouseClicked

    private void acc_settMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_settMouseClicked
        // TODO add your handling code here:
        Base.removeAll();
        Base.repaint();
        Base.revalidate();
        
        Base.add(acc_settings);
         Base.repaint();
        Base.revalidate();
    }//GEN-LAST:event_acc_settMouseClicked

    private void Main_menuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Main_menuMouseClicked
        // TODO add your handling code here:
         Base.removeAll();
        Base.repaint();
        Base.revalidate();
        
        Base.add(Menu);
         Base.repaint();
        Base.revalidate();
    }//GEN-LAST:event_Main_menuMouseClicked

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        // TODO add your handling code here:
          Base.removeAll();
        Base.repaint();
        Base.revalidate();
        
        Base.add(acc_settings);
         Base.repaint();
        Base.revalidate();
    }//GEN-LAST:event_backMouseClicked

    private void createMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createMouseClicked
        // TODO add your handling code here:
        String types;
        String dep=department.getSelectedItem().toString();
        String year_s=year.getSelectedItem().toString();
        String deposit_s=deposit.getSelectedItem().toString();
        if(Student.isSelected())
             types="Student";
        else
            types="Staff";
        
        if(name.getText().equals("")||(card_num.getText().equals("")))
        {
            JOptionPane.showMessageDialog(null,"Please enter all the details properly","Create Account",2);
        }
        else if(card_num.getText().length()!=4)
            JOptionPane.showMessageDialog(null,"Invalid Library card number","Create Account",0);
        else
        {
            try {
                String sql="Insert into s_details(Name,Lcard_No,Type,Department,Year,Balance) values(?,?,?,?,?,?)";
                ps=con.prepareStatement(sql);
                ps.setString(1, name.getText());
                ps.setString(2, card_num.getText());
                ps.setString(3, types);
                ps.setString(4, dep);
                ps.setString(5, year_s);
                ps.setString(6, deposit_s);
                
                
                ps.execute();
                JOptionPane.showMessageDialog(null,"Account created successfully","Create Account",1);
                name.setText("");
                card_num.setText("");
                department.setSelectedIndex(0);
                year.setSelectedIndex(0);
                deposit.setSelectedIndex(0);
                ps.close();
                rs.close();
               
                
            } catch (SQLException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            catch(NullPointerException e){
                 Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, e);
            }
                  finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
            
        }
    }//GEN-LAST:event_createMouseClicked

    private void acc_createMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_createMouseClicked
        // TODO add your handling code here:
         Base.removeAll();
        Base.repaint();
        Base.revalidate();
        
        Base.add(Create_Acc);
         Base.repaint();
        Base.revalidate();
    }//GEN-LAST:event_acc_createMouseClicked

    private void del_accMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_del_accMouseClicked
        // TODO add your handling code here:
           Base.removeAll();
        Base.repaint();
        Base.revalidate();
        
        Base.add(Delete_Acc);
         Base.repaint();
        Base.revalidate();
    }//GEN-LAST:event_del_accMouseClicked

    private void card_numKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card_numKeyTyped
        // TODO add your handling code here:
           c=evt.getKeyChar();
        len=card_num.getText().length();
        
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
        if(len>=4)
        {
            evt.consume();
        }
    }//GEN-LAST:event_card_numKeyTyped

    private void nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyTyped
        // TODO add your handling code here:
        c=evt.getKeyChar();
      
        boolean b = Character.isLetter(c);
        boolean d = Character.isSpace(c);
        
        if(b==false&&d==false)
            evt.consume();
   
        if(Character.isDigit(c))
            evt.consume();
        
    }//GEN-LAST:event_nameKeyTyped

    private void name1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_name1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_name1ActionPerformed

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        // TODO add your handling code here:
        if((name1.getText().equals(""))||(card_number.getText().equals("")))
                {
                    JOptionPane.showMessageDialog(null,"Please enter all the required fields .","Delete Account",2);
                }
        //if it does not match condition
        //JOptionPane.showMessageDialog(null,"Such account does not exist .","Delete Account ",0);
        else if(card_number.getText().length()<4)
        {
            JOptionPane.showMessageDialog(null,"Card number entered is invalid .","Delete Account",2);
        }
        else
        {
            int c = JOptionPane.showConfirmDialog(null,"Are you sure ","Delete Account ",JOptionPane.YES_NO_OPTION,3);
            if(c==0)
            {
                try {
                    String sql="delete from s_details where Name=? and Lcard_No=?";
                    ps=con.prepareStatement(sql);
                    ps.setString(1, name1.getText());
                    ps.setString(2, card_number.getText());
                    ps.execute();
                    JOptionPane.showMessageDialog(null,"Account deleted successfully","Delete Account ",1);
                    card_number.setText("");
                    name1.setText("");
                } catch (SQLException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                      finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
            }
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void name1KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name1KeyTyped
        // TODO add your handling code here:
        c=evt.getKeyChar();
        
        if(Character.isDigit(c))
        {
            evt.consume();
        }
    }//GEN-LAST:event_name1KeyTyped

    private void card_numberKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card_numberKeyTyped
        // TODO add your handling code here:
            c=evt.getKeyChar();
        
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
        
        if(card_number.getText().length()==4)
        {
            evt.consume();
        }
    }//GEN-LAST:event_card_numberKeyTyped

    private void goMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goMouseClicked
        // TODO add your handling code here:
            if((card_no.getText().equals("")))
                {
                    JOptionPane.showMessageDialog(null,"Please enter all the required fields .","Recharge Account",2);
                }
        //if it does not match condition
        //JOptionPane.showMessageDialog(null,"Such account does not exist .","Recharge Account ",0);
        else if(card_no.getText().length()<4)
        {
            JOptionPane.showMessageDialog(null,"Card number entered is invalid .","Recharge Account",2);
        }
        else
        {
                try {
                    String sql="select Name,Balance from s_details where Lcard_No=?";
                    ps=con.prepareStatement(sql);
                    ps.setString(1, card_no.getText());
                    rs=ps.executeQuery();
                    if(rs.next())
                    {
                        String c_bal= rs.getString("Balance");
                        String name=rs.getString("Name");
                        current_bal.setText(c_bal);
                        name2.setText(name);
                    }
                    else
                    {
                         JOptionPane.showMessageDialog(null,"Card number entered is invalid .","Recharge Account",2);
      
                    }
                    //query to retrieve his current balance in the text field given below
                } catch (SQLException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                      finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
            
        }
    }//GEN-LAST:event_goMouseClicked

    private void abcMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_abcMouseEntered
        // TODO add your handling code here:
     
    }//GEN-LAST:event_abcMouseEntered

    private void sada_dosaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sada_dosaMouseClicked
        
        
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Sada Dosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
            
             if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Sada Dosa .","South Indian",1));
           
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            else  if(val>qty)
             JOptionPane.showMessageDialog(null,"The available quantity of Sada Dosa is "+qty,"EZCanteen",2);
            
              else
              {
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*20;
            amt=amt+val1;
            
            String s ="Sada Dosa";
                String cost="20";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
              }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
        
    }//GEN-LAST:event_sada_dosaMouseClicked

    private void masala_dosaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masala_dosaMouseClicked
        int qty=0;
        
        
        try {
            // TODO add your handling code here:
            String itm="Masala Dosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
               if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
          val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Masala Dosa .","South Indian",1));
             if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
         else if(val>qty)
          JOptionPane.showMessageDialog(null,"The available quantity of Masala Dosa is "+qty,"EZCanteen",2);
            else
          {
             qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*25;
            amt=amt+val1;
            
             String s ="Masala Dosa";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
          }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_masala_dosaMouseClicked

    private void rava_dosaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rava_dosaMouseClicked
       
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Rava Dosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
            
               if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Masala Dosa .","South Indian",1));
                if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
           else if(val>qty)
            
            JOptionPane.showMessageDialog(null,"The available quantity of Upma is "+qty,"EZCanteen",2);
            else
            {
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*25;
            amt=amt+val1;
           
           
             String s ="Rava Dosa";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
        
    }//GEN-LAST:event_rava_dosaMouseClicked

    private void sada_uthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sada_uthMouseClicked
        
        int qty=0;
        
        
        try {
            // TODO add your handling code here:
            String itm="Sada Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
               if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Masala Dosa .","South Indian",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
           else if(val>qty)
            
            JOptionPane.showMessageDialog(null,"The available quantity of Sada Uthappa is "+qty,"EZCanteen",2);
            else
            {
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*20;
            amt=amt+val1;
            
          
             String s ="Sada Uthappa";
                String cost="20";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_sada_uthMouseClicked

    private void coco_uthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coco_uthMouseClicked
       
        int qty=0;
        
        
        try {
            // TODO add your handling code here:
            String itm="Coconut Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
            
               if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Coconut Uthappa .","South Indian",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else  if(val>qty)
            
            JOptionPane.showMessageDialog(null,"The available quantity of Coconut Uthappa is "+qty,"EZCanteen",2);
            else
            {
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*35;
            amt=amt+val1;
          
            
             String s ="Coconut Uthappa";
                String cost="35";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            } 
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_coco_uthMouseClicked

    private void mini_uthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mini_uthMouseClicked
       
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Mini Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
               if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Mini Uthappa .","South Indian",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else  if(val>qty)
            
            JOptionPane.showMessageDialog(null,"The available quantity of Mini Uthappa is "+qty,"EZCanteen",2);
            else
            {
            
            qty=qty-val;
            
            
            
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*20;
            amt=amt+val1;
            
            
             String s ="Mini Uthappa";
                String cost="20";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_mini_uthMouseClicked

    private void palak_dosaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_palak_dosaMouseClicked
        
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Palak Dosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
            
               if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Palak Dosa.","South Indian",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else  if(val>qty)
            
            JOptionPane.showMessageDialog(null,"The available quantity of Palak Dosa is "+qty,"EZCanteen",2);
            else
            {
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*30;
            amt=amt+val1;
          
           
             String s ="Palak Dosa";
                String cost="30";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_palak_dosaMouseClicked

    private void nood_uthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nood_uthMouseClicked
      
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Noodle Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
            
               if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Noodle Uthappa .","South Indian",1));
                if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
                else if(val>qty)
            
            JOptionPane.showMessageDialog(null,"The available quantity of Noodle Uthappa is "+qty,"EZCanteen",2);
            else
            {
            
            
            qty=qty-val;
           
            
            
            
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
             setStatus();
            int val1=val*35;
            amt=amt+val1;
           
          
             String s ="Noodle Uthappa";
                String cost="35";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_nood_uthMouseClicked

    private void chilly_uthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chilly_uthMouseClicked
        
        int qty=0;
        
        try {
            // TODO add your handling code here:

            String itm="Chilly Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
               if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Chilly Uthappa .","South Indian",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else  if(val>qty)
            
            JOptionPane.showMessageDialog(null,"The available quantity of Chilly Uthappa is "+qty,"EZCanteen",2);
            else
            {
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*35;
            amt=amt+val1;
           
             String s ="Chilly Uthappa";
                String cost="35";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_chilly_uthMouseClicked

    private void onio_uthMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onio_uthMouseClicked
        
        int qty=0;
        try {
            // TODO add your handling code here:
            String itm="Onion Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
           if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Masala Dosa .","South Indian",1));
                if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
          else  if(val>qty)
            
            JOptionPane.showMessageDialog(null,"The available quantity of Upma is "+qty,"EZCanteen",2);
         
        
          
          else 
            {
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            setStatus();
            int val1=val*30;
            amt=amt+val1;
          
         
             String s ="Onion Uthappa";
                String cost="30";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
               
            }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_onio_uthMouseClicked

    private void f_riceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f_riceMouseClicked
        
        int qty=0;
        
        
        try {
            // TODO add your handling code here:
            String itm="Veg. Fried Rice";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
            
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Veg. Fried Rice .","EZCanteen",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
           else   if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity of Fried Rice : "+qty,"EZCanteen",2);

            else
              {
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            setStatus();
            int val1=val*25;
            amt=amt+val1;
             String s ="Veg.Fried Rice";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_f_riceMouseClicked

    private void h_noodlesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h_noodlesMouseClicked
       
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Hakka Noodles";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
            
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Hakka Noodles .","EZCanteen",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else  if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Hakka Noodles : "+qty,"EZCanteen",2);

            else
              {
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*25;
            amt=amt+val1;
             String s ="Hakka Noodles";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_h_noodlesMouseClicked

    private void manchurianMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manchurianMouseClicked
        
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Veg. Manchurian";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
             val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Veg. Manchurian .","EZCanteen",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
              else if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Manchurian :"+qty,"EZCanteen",2);

            else
               {
             
             qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
             setStatus();
            int val1=val*35;
            amt=amt+val1;
             String s ="Veg. Manchurian";
                String cost="35";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        }} }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_manchurianMouseClicked

    private void schz_riceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schz_riceMouseClicked
       
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Schezwan Rice";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                try {
                    qty=rs.getInt("qty");
                } catch (SQLException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                      finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
                
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Schezwan Rice .","EZCanteen",1));
                 if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
                 else if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Schezwan Rice :"+qty,"EZCanteen",2);

            else
               {
             
            
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
             setStatus();
            int val1=val*30;
            amt=amt+val1;
             String s ="Schezwan Rice";
                String cost="30";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_schz_riceMouseClicked

    private void schz_noodlesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schz_noodlesMouseClicked
       
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Schezwan Noodles";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Schezwan Noodles .","EZCanteen",1));
                 if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else   if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Schezwan Rice :"+qty,"EZCanteen",2);

            else
               {
             
            
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
              setStatus();
            int val1=val*35;
            amt=amt+val1;
            String s ="Schezwan Noodles";
                String cost="35";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        }}} catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_schz_noodlesMouseClicked

    private void man_soupMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_man_soupMouseClicked
       
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Manchow Soup";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }  if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Manchow Soup .","EZCanteen",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
              
             else  if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Manchow soup :"+qty,"EZCanteen",2);

            else
               {
             
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            
            int val1=val*40;
            amt=amt+val1;
             String s ="Manchow Soup";
                String cost="40";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        }} }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_man_soupMouseClicked

    private void puriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_puriMouseClicked
     
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Puri Bhaji";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
           val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Puri Bhaji .","EZCanteen",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
             
             else  if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Puri Bhaji :"+qty,"EZCanteen",2);

            else
               {
             
           
           
           qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
             setStatus();
            int val1=val*25;
            amt=amt+val1;
             String s ="Puri Bhaji";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        }} }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_puriMouseClicked

    private void lunchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lunchMouseClicked
       int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Chinese Lunch";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Chinese Lunch .","EZCanteen",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
              else    if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Chinese Lunch :"+qty,"EZCanteen",2);

            else
               {
             
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            
            int val1=val*50;
            amt=amt+val1;
              String s ="Chinese Lunch";
                String cost="50";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        }}} catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_lunchMouseClicked

    private void sp_lunchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sp_lunchMouseClicked
     
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Special Lunch";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Special Lunch .","EZCanteen",1));
             if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
              else    if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Special Lunch :"+qty,"EZCanteen",2);

            else
               {
             
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*45;
            amt=amt+val1;
            String s ="Special Lunch";
                String cost="45";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_sp_lunchMouseClicked

    private void chanaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chanaMouseClicked
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Chana Masala";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Chana .","EZCanteen",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
              else    if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Chana Masala"
                    + " :"+qty,"EZCanteen",2);

            else
               {
             
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*20;
            amt=amt+val1;
            String s ="Chana Masala";
                String cost="20";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_chanaMouseClicked

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
        // TODO add your handling code here:
        //code to print bill
        MainGUI m = new MainGUI();
        close();
        m.setVisible(true);
    }//GEN-LAST:event_printMouseClicked

    private void curr_balActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_curr_balActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_curr_balActionPerformed

    private void submitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseClicked
      
        
        if((lib_Card.getText().equals("")))
           
         JOptionPane.showMessageDialog(null,"Please enter the required details","EZCanteen",2);
           
        
        else
        {
               
            try {
                //code to submit the card number and retrieve the balance in the next text box
                String sql="select Name,Balance from s_details where Lcard_No=?";
                ps=con.prepareStatement(sql);
                ps.setString(1, lib_Card.getText());
                rs=ps.executeQuery();
                if(rs.next())
                {
                    String c_bal= rs.getString("Balance");
                    String nam=rs.getString("Name");
                    
                    curr_bal.setText(c_bal);
                    name3.setText(nam);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Invalid name or card number ","EZCanteen",2);
                }
            } catch (SQLException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
                  finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
        }
    }//GEN-LAST:event_submitMouseClicked

    public void clearBoard()
    {
          int qty=0;
          int add=0;
          
            String x6=main6.getText();
           String y6=p6.getText();
            String x1=main1.getText();
           String y1=p01.getText();
           
            String x2=main2.getText();
           String y2=p2.getText();
            String x3=main3.getText();
           String y3=p3.getText();
            String x4=main4.getText();
           String y4=p4.getText();
                           
                 String x5=main5.getText();
           String y5=p5.getText();
                 
           main1.setText("");//clearing the board
                            main2.setText("");
                             main3.setText("");
                             main4.setText("");
                             main5.setText("");
                             main6.setText("");
                             g_total.setText("");
                             p01.setText("");
                             c1.setText("");
                             t1.setText("");
                                p2.setText("");
                             c2.setText("");
                             t2.setText("");
                             
                                p3.setText("");
                             c3.setText("");
                             t3.setText("");
                                p4.setText("");
                             c4.setText("");
                             t4.setText("");
                                p5.setText("");
                             c5.setText("");
                             t5.setText("");
                                p6.setText("");
                             c6.setText("");
                             t6.setText("");
                             
                          
                             try
                             {
                                 String qtysql="select qty from FastFood where items='"+x1+"' ";
                                    ps=con.prepareStatement(qtysql);
                                     rs=ps.executeQuery();
                                 if(rs.next())
                                  {
                                     qty=rs.getInt("qty");
                                 
                                 }
                                 add=Integer.parseInt(y1);
                                 qty=qty+add;
                                 
                               
                                String qtyup1="update FastFood set qty='"+qty+"' where items='"+x1+"'";
                                ps=con.prepareStatement(qtyup1);
                                ps.execute();
                                ps.close();
                               rs.close();
                                
                                if(main2.getText()!=null)
                                {
                                   System.out.println("reached 2nd");
                                    String qtysql1="select qty from FastFood where items='"+x2+"' ";
                                    ps=con.prepareStatement(qtysql1);
                                     rs=ps.executeQuery();
                                 if(rs.next())
                                  {
                                     qty=rs.getInt("qty");
                                 
                                 }
                                 add=Integer.parseInt(y2);
                                 qty=qty+add;
                                 
                                String qtyup2="update Fastfood set qty='"+qty+"' where items='"+x2+"'";
                                ps=con.prepareStatement(qtyup2);
                                ps.execute();
                                
                                }
                                if(main3.getText()!=null)
                                {
                                    
                                    String qtysql2="select qty from FastFood where items='"+x3+"' ";
                                    ps=con.prepareStatement(qtysql2);
                                     rs=ps.executeQuery();
                                 if(rs.next())
                                  {
                                     qty=rs.getInt("qty");
                                 
                                 }
                                 add=Integer.parseInt(y3);
                                 qty=qty+add;
                                 
                                 String qtyup3="update Fastfood set qty='"+qty+"' where items='"+x3+"'";
                                ps=con.prepareStatement(qtyup3);
                                ps.execute();
                                }
                                
                                   if(main4.getText()!=null)
                                {
                                    
                                    String qtysql3="select qty from FastFood where items='"+x4+"' ";
                                    ps=con.prepareStatement(qtysql3);
                                     rs=ps.executeQuery();
                                 if(rs.next())
                                  {
                                     qty=rs.getInt("qty");
                                 
                                 }
                                 add=Integer.parseInt(y4);
                                 qty=qty+add;
                                 
                                    
                                    
                                    
                                String qtyup4="update Fastfood set qty='"+qty+"' where items='"+x4+"'";
                                ps=con.prepareStatement(qtyup4);
                                ps.execute();
                                }
                                   
                                     if(main5.getText()!=null)
                                { 
                                    
                                    String qtysql4="select qty from FastFood where items='"+x5+"' ";
                                    ps=con.prepareStatement(qtysql4);
                                     rs=ps.executeQuery();
                                 if(rs.next())
                                  {
                                     qty=rs.getInt("qty");
                                 
                                 }
                                 add=Integer.parseInt(y5);
                                 qty=qty+add;
                                 
                                    
                                    
                                String qtyup5="update Fastfood set qty='"+qty+"' where items='"+x5+"'";
                                ps=con.prepareStatement(qtyup5);
                                ps.execute();
                                }
                                     if(main6.getText()!=null)
                                {   
                                
                                    String qtysql5="select qty from FastFood where items='"+x6+"' ";
                                    ps=con.prepareStatement(qtysql5);
                                     rs=ps.executeQuery();
                                 if(rs.next())
                                  {
                                     qty=rs.getInt("qty");
                                 
                                 }
                                 add=Integer.parseInt(y6);
                                 qty=qty+add;
                                 
                                    
                                    
                                    String qtyup6="update Fastfood set qty='"+qty+"' where items='"+x6+"'";
                                ps=con.prepareStatement(qtyup6);
                                ps.execute();
                                }
                                     
                                     setStatus();
                             }catch(Exception e){} 
                                   finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
                             
                             
                             amt=0;
    }
    private void deductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deductMouseClicked
        // TODO add your handling code here:
           
            
            if((lib_Card.getText().equals(""))||(curr_bal.getText().equals("")))
            JOptionPane.showMessageDialog(null,"Please enter the required details","EZCanteen",2);
            
            else
            {
                int x = Integer.parseInt(curr_bal.getText().toString());
                int y = Integer.parseInt(bill_ge.getText().toString());
                
                
                if(x<y)
                {
                    
                    int z = JOptionPane.showConfirmDialog(null,"Not enough balance . Do you want to recharge your account ","EZCanteen",JOptionPane.YES_NO_CANCEL_OPTION,3);
                    
                    if(z==0)
                    {
                       pass=1;
                    name2.setText(name3.getText());
                    card_no.setText(lib_Card.getText());
                        lib_Card.setText(null);
                    curr_bal.setText(null);
                   
                    Base.removeAll();
                    Base.repaint();
                    Base.revalidate();
                    
                     Base.add(Recharge_Acc);
                    Base.repaint();
                    Base.revalidate();
                    }
                    else
                    {
                        //Code to print the bill (PDF form)
               
                    
                        JOptionPane.showMessageDialog(null,"Order placed successfully.","EZCanteen",1);
                           
                        
                                  lib_Card.setText(null);
                    curr_bal.setText(null);
                    name3.setText(null);
                    bill_ge.setText(null);
                        
                          clearBoard();
                                
                              Base.removeAll();
                              Base.repaint();
                              Base.revalidate();
                    
                              Base.add(Menu);
                              Base.repaint();
                              Base.revalidate();
                        
                    }
                }
                else
                {
                    try {
                        x=x-y;
                        fin_bal.setText(""+x);
                        //update the balance of this user with the new balance
                        String lc=lib_Card.getText();
                        String sql="update s_details set Balance=? where Lcard_No='"+lc+"'";
                        ps=con.prepareStatement(sql);
                        String fs=fin_bal.getText();
                        ps.setInt(1, Integer.parseInt(fs));
                        ps.execute();
                        ps.close();
                        rs.close();
                        
                        
                           lib_Card.setText(null);
                    curr_bal.setText(null);
                     name3.setText(null);
                    bill_ge.setText(null);
                     fin_bal.setText(null);
            
                 g_total.setText("");
                 clearBoard();
                amt=0;
                
                Base.removeAll();
                Base.repaint(); // setting the main menu panel again to the base panel
                Base.revalidate();
                
                Base.add(Menu);
                Base.repaint();
                Base.revalidate();
          
                        
                        
                           JOptionPane.showMessageDialog(null,"Order placed successfully.","EZCanteen",1);
                        
                    } catch (SQLException ex) {
                        Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                          finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
                    
                }
            }
                     
            
    }//GEN-LAST:event_deductMouseClicked

    private void lib_CardKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lib_CardKeyTyped
        // TODO add your handling code here:
                 c=evt.getKeyChar();
        int len1=lib_Card.getText().length();
        
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
        if(len1>=4)
        {
            evt.consume();
        }
    }//GEN-LAST:event_lib_CardKeyTyped

    private void RechargeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RechargeMouseClicked
        // TODO add your handling code here:
        
        Base.removeAll();
        Base.repaint();
        Base.revalidate();
        
        Base.add(Recharge_Acc);
         Base.repaint();
        Base.revalidate();
    }//GEN-LAST:event_RechargeMouseClicked

    private void rec_amtItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_rec_amtItemStateChanged
        // TODO add your handling code here:
           
        
         
            
    }//GEN-LAST:event_rec_amtItemStateChanged

    private void rec_amtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rec_amtActionPerformed
        // TODO add your handling code here:
           
    }//GEN-LAST:event_rec_amtActionPerformed

    private void rec_amtMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rec_amtMouseClicked
        // TODO add your handling code here:
            if(current_bal.getText().equals(""))
                JOptionPane.showMessageDialog(null,"Please get the Current Balance .","EZCanteen",2);
           
            
            if(pass==1)
            { 
                 
             
                int x = Integer.parseInt( rec_amt.getSelectedItem().toString());
                x=x+Integer.parseInt(curr_bal.getText());
                if(x<rep_amt)
                {
                    JOptionPane.showMessageDialog(null,"Recharge amount is less than the total bill amount .","EZCanteen",2);
               }
            }
    }//GEN-LAST:event_rec_amtMouseClicked

    private void Confirm_balMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Confirm_balMouseClicked
        // TODO add your handling code here:
        if(current_bal.getText().equals(""))
        {
            JOptionPane.showMessageDialog(null,"Please get the Current Balance ","EZCanteen",2);
        }
        else
        {
              
                 
            int a =Integer.parseInt(current_bal.getText().toString());
            int b = Integer.parseInt(rec_amt.getSelectedItem().toString());
          
           
            
            
            
            if(pass==1)
            {
                rep_amt=Integer.parseInt(g_total.getText().toString());
                
                if(rep_amt>(a+b))
                {
                JOptionPane.showMessageDialog(null,"The final balance would be  lesser than the bill amount .","EZCanteen",2);
                }
                else
                {
                     int x =JOptionPane.showConfirmDialog(null,"Are your sure ","EZCanteen",JOptionPane.YES_NO_OPTION,3);

                      if(x==0)
                      {
                         try {
                             new_bal.setText(""+(a+b));
                             String lcard = card_no.getText();
                             String sql="update s_details set Balance=? where Lcard_No='"+lcard+"'";
                             ps=con.prepareStatement(sql);
                             ps.setString(1,new_bal.getText());
                             ps.execute();
                             ps.close();
                             rs.close();
                             JOptionPane.showMessageDialog(null,"Account balance updated successfully . ","EZCanteen",1);
                             rec_amt.setSelectedIndex(0);
                             name3.setText(name2.getText());
                             lib_Card.setText( card_no.getText());
                             name2.setText("");
                             card_no.setText(null);
                             current_bal.setText(null);
                             new_bal.setText(null);
                             Base.removeAll();
                             Base.repaint();
                             Base.revalidate();
                             Base.add(Deduct_amt);
                             Base.repaint();
                             Base.revalidate();
                             pass=0;
                         } catch (SQLException ex) {
                             Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                         }
                               finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

                        }
                    }
               }
            else
            {
                int y =JOptionPane.showConfirmDialog(null,"Are your sure ","EZCanteen",JOptionPane.YES_NO_OPTION,3);

                      if(y==0)
                      {
                    try {
                        a=a+b;
                        new_bal.setText(""+a);
                        
                        
                        //code to update his balance
                        String lcard = card_no.getText();
                        String sql="update s_details set Balance=? where Lcard_No='"+lcard+"'";
                        ps=con.prepareStatement(sql);
                         ps.setString(1,new_bal.getText());
                        ps.execute();
                        ps.close();
                        rs.close();
                        
                        
                        
                        JOptionPane.showMessageDialog(null,"Account balance updated successfully . ","EZCanteen",1);
                        
                        rec_amt.setSelectedIndex(0);
                      //  name3.setText(name2.getText());
                      //  lib_Card.setText( card_no.getText());
                        new_bal.setText("");
                        name2.setText("");
                        card_no.setText("");
                        current_bal.setText("");
                    } catch (SQLException ex) {
                        Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                    }
                          finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
            }
            }
           
        }
    }//GEN-LAST:event_Confirm_balMouseClicked

    private void RechargeMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RechargeMouseEntered
        // TODO add your handling code here:
        ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/Recharge1 (3).jpg"));
     Recharge.setIcon(i1);
    }//GEN-LAST:event_RechargeMouseEntered

    private void lib_CardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lib_CardActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_lib_CardActionPerformed

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
        // TODO add your handling code here:
     
    }//GEN-LAST:event_formMouseClicked

    private void miniMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniMouseClicked
        // TODO add your handling code here:
           this.setState(Frame.ICONIFIED);
    }//GEN-LAST:event_miniMouseClicked

    private void Main_menuMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Main_menuMouseEntered
        // TODO add your handling code here:
        ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/MainMenu1 (1).jpg"));
        Main_menu.setIcon(i1);
    }//GEN-LAST:event_Main_menuMouseEntered

    private void Main_menuMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Main_menuMouseExited
        // TODO add your handling code here:
          ImageIcon i= new ImageIcon(getClass().getResource("/labels/MainMenu (1).jpg"));
        Main_menu.setIcon(i);
    }//GEN-LAST:event_Main_menuMouseExited

    private void logoutMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseEntered
        // TODO add your handling code here:
          ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/logout1.jpg"));
       logout.setIcon(i1);
    }//GEN-LAST:event_logoutMouseEntered

    private void logoutMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseExited
        // TODO add your handling code here:
            ImageIcon i = new ImageIcon(getClass().getResource("/labels/logout.jpg"));
       logout.setIcon(i);
    }//GEN-LAST:event_logoutMouseExited

    private void acc_settMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_settMouseEntered
        // TODO add your handling code here:
                ImageIcon i = new ImageIcon(getClass().getResource("/labels/AccountSettings1.jpg"));
      acc_sett.setIcon(i);
    }//GEN-LAST:event_acc_settMouseEntered

    private void acc_settMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_settMouseExited
        // TODO add your handling code here:
                ImageIcon i = new ImageIcon(getClass().getResource("/labels/AccountSettings.jpg"));
       acc_sett.setIcon(i);
    }//GEN-LAST:event_acc_settMouseExited

    private void RechargeMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_RechargeMouseExited
        // TODO add your handling code here:
                ImageIcon i = new ImageIcon(getClass().getResource("/labels/Recharge.jpg"));
       Recharge.setIcon(i);
    }//GEN-LAST:event_RechargeMouseExited

    private void acc_createMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_createMouseEntered
        // TODO add your handling code here:
                ImageIcon i = new ImageIcon(getClass().getResource("/labels/Create1.jpg"));
       acc_create.setIcon(i);
    }//GEN-LAST:event_acc_createMouseEntered

    private void acc_createMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_acc_createMouseExited
        // TODO add your handling code here:
          ImageIcon i = new ImageIcon(getClass().getResource("/labels/Create.jpg"));
       acc_create.setIcon(i);
    }//GEN-LAST:event_acc_createMouseExited

    private void del_accMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_del_accMouseEntered
        // TODO add your handling code here:
                  ImageIcon i = new ImageIcon(getClass().getResource("/labels/Delete1.jpg"));
       del_acc.setIcon(i);
    }//GEN-LAST:event_del_accMouseEntered

    private void del_accMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_del_accMouseExited
        // TODO add your handling code here:
                  ImageIcon i = new ImageIcon(getClass().getResource("/labels/Delete.jpg"));
       del_acc.setIcon(i);
    }//GEN-LAST:event_del_accMouseExited

    private void gen_billMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gen_billMouseEntered
        // TODO add your handling code here:
                  ImageIcon i = new ImageIcon(getClass().getResource("/labels/generate1.jpg"));
       gen_bill.setIcon(i);
    }//GEN-LAST:event_gen_billMouseEntered

    private void gen_billMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_gen_billMouseExited
        // TODO add your handling code here:
           ImageIcon i = new ImageIcon(getClass().getResource("/labels/generate0.jpg"));
       gen_bill.setIcon(i);
    }//GEN-LAST:event_gen_billMouseExited

    private void clearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseEntered
        // TODO add your handling code here:
               ImageIcon i = new ImageIcon(getClass().getResource("/labels/clear1.jpg"));
    clear.setIcon(i);
    }//GEN-LAST:event_clearMouseEntered

    private void clearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseExited
        // TODO add your handling code here:
               ImageIcon i = new ImageIcon(getClass().getResource("/labels/clear0.jpg"));
      clear.setIcon(i);
    }//GEN-LAST:event_clearMouseExited

    private void createMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createMouseEntered
        // TODO add your handling code here:
           ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/create1 (1).jpg"));
      create.setIcon(i1);
    }//GEN-LAST:event_createMouseEntered

    private void createMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_createMouseExited
        // TODO add your handling code here:
         ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/create0.jpg"));
      create.setIcon(i1);
    }//GEN-LAST:event_createMouseExited

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        // TODO add your handling code here:
        ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/delete0.jpg"));
      delete.setIcon(i1);
    }//GEN-LAST:event_deleteMouseExited

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        // TODO add your handling code here:
        ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/delete1 (1).jpg"));
      delete.setIcon(i1);
    }//GEN-LAST:event_deleteMouseEntered

    private void goMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goMouseEntered
        // TODO add your handling code here:
          ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/submit1 (1).jpg"));
      go.setIcon(i1);
    }//GEN-LAST:event_goMouseEntered

    private void goMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_goMouseExited
        // TODO add your handling code here:
        ImageIcon i = new ImageIcon(getClass().getResource("/labels/submit0 (1).jpg"));
      go.setIcon(i);
    }//GEN-LAST:event_goMouseExited

    private void Confirm_balMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Confirm_balMouseEntered
        // TODO add your handling code here:
          ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/confirm (1).jpg"));
      Confirm_bal.setIcon(i1);
    }//GEN-LAST:event_Confirm_balMouseEntered

    private void Confirm_balMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Confirm_balMouseExited
        // TODO add your handling code here:
           ImageIcon i = new ImageIcon(getClass().getResource("/labels/confirm1.jpg"));
       Confirm_bal.setIcon(i);
    }//GEN-LAST:event_Confirm_balMouseExited

    private void submitMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseEntered
        // TODO add your handling code here:
        ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/submit1 (1).jpg"));
      submit.setIcon(i1);
    }//GEN-LAST:event_submitMouseEntered

    private void submitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_submitMouseExited
        // TODO add your handling code here:
        ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/submit0 (1).jpg"));
       submit.setIcon(i1);
    }//GEN-LAST:event_submitMouseExited

    private void deductMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deductMouseEntered
        // TODO add your handling code here:
         ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/deduct1.jpg"));
      deduct.setIcon(i1);
    }//GEN-LAST:event_deductMouseEntered

    private void deductMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deductMouseExited
        // TODO add your handling code here:
           ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/deduct (2).jpg"));
      deduct.setIcon(i1);
    }//GEN-LAST:event_deductMouseExited

    private void card_noKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card_noKeyTyped
        // TODO add your handling code here:
               c=evt.getKeyChar();
       int len1=card_no.getText().length();
        
        if(!Character.isDigit(c))
        {
            evt.consume();
        }
        if(len1>=4)
        {
            evt.consume();
        }
    }//GEN-LAST:event_card_noKeyTyped

    private void name2KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name2KeyTyped
        // TODO add your handling code here:
               c=evt.getKeyChar();
       
        if(Character.isDigit(c))
        {
            evt.consume();
        }
      
    }//GEN-LAST:event_name2KeyTyped

    private void name3KeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_name3KeyTyped
        // TODO add your handling code here:
                 c=evt.getKeyChar();
       
        if(Character.isDigit(c))
        {
            evt.consume();
        }
    }//GEN-LAST:event_name3KeyTyped

    private void miniMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniMouseEntered
        // TODO add your handling code here:
         ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/min1.jpg"));
    mini.setIcon(i1);
    }//GEN-LAST:event_miniMouseEntered

    private void miniMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_miniMouseExited
        // TODO add your handling code here:
        ImageIcon i = new ImageIcon(getClass().getResource("/labels/min.jpg"));
   mini.setIcon(i);
    }//GEN-LAST:event_miniMouseExited

    private void close1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close1MouseEntered
        // TODO add your handling code here:
        ImageIcon i1 = new ImageIcon(getClass().getResource("/labels/close1.jpg"));
    close1.setIcon(i1);
    }//GEN-LAST:event_close1MouseEntered

    private void close1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_close1MouseExited
        // TODO add your handling code here:
        ImageIcon i = new ImageIcon(getClass().getResource("/labels/close.jpg"));
     close1.setIcon(i);
    }//GEN-LAST:event_close1MouseExited

    private void logoutMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_logoutMouseClicked
        // TODO add your handling code here:
      try{
        int x = JOptionPane.showConfirmDialog(null,"Are you sure ","EZCanteen",JOptionPane.YES_NO_OPTION,3);
        if(x==0)
        {
        
        LoginGUI l = new LoginGUI();
        ps.close();
        rs.close();
        
        close();
        l.setVisible(true);
        }
      }catch(Exception e){}
            finally{
             try
             {
                 rs.close();
                 ps.close();
                 con.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_logoutMouseClicked

    private void c_drinksMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_c_drinksMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Cold Drinks";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
        val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Sada Dosa .","South Indian",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
        
        
        
        else
              {          
        qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
           
            int val1=val*15;
            amt=amt+val1;
             String s ="Cold Drinks ";
                String cost="15";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        }} }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_c_drinksMouseClicked

    private void jLabel68MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel68MouseClicked
        // TODO add your handling code here:
                      val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Chana .","EZCanteen",1));
                         int pr = Integer.parseInt(c_drinks.getText().toString());
                         int val1=val*pr;
         amt=amt+val1;
         String s ="Cold Drinks       "+pr+"        "+val+"              "+val1; 
        if(main1.getText().isEmpty())
            main1.setText(s);
        else if (main2.getText().isEmpty())
            main2.setText(s);
          else if (main3.getText().isEmpty())
            main3.setText(s);
          else if (main4.getText().isEmpty())
            main4.setText(s);
          else if (main5.getText().isEmpty())
            main5.setText(s);
          else if (main6.getText().isEmpty())
            main6.setText(s);
    }//GEN-LAST:event_jLabel68MouseClicked

    private void staffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_staffActionPerformed
        // TODO add your handling code here:
        types="Staff";
    }//GEN-LAST:event_staffActionPerformed

    private void StudentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentActionPerformed
        // TODO add your handling code here:
        types="Student";
    }//GEN-LAST:event_StudentActionPerformed

    private void del_mulMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_del_mulMouseClicked
        // TODO add your handling code here:
          try {
            // TODO add your handling code here:
            String y=year1.getSelectedItem().toString();
            
            String sql="delete from s_details where year=?";
            ps=con.prepareStatement(sql);
            //code to get value from combobox XD
            
            ps.setString(1, y);
            ps.execute();
            JOptionPane.showMessageDialog(null,"DELETED");
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
                finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_del_mulMouseClicked

    private void teaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_teaMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Tea";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }  if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
                val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Tea .","Beverages",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
                
                else
              {        
                qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
        
            int val1=val*5;
            amt=amt+val1;
             String s ="Tea";
                String cost="05";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_teaMouseClicked

    private void coffeeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_coffeeMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Coffee";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Coffee .","Beverages",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else
              { 
            qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
            int val1=val*10;
            amt=amt+val1;
             String s ="Coffee";
                String cost="10";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_coffeeMouseClicked

    private void h_chocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h_chocMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Hot Chocolate";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Hot Chocolate .","Beverages",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            else
               {
            qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
            int val1=val*20;
            amt=amt+val1;
             String s ="Hot Chocolate";
                String cost="20";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_h_chocMouseClicked

    private void milk_sMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_milk_sMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Milk Shakes";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Milk Shakes .","Beverages",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            else
              {
            qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
            
            int val1=val*30;
            amt=amt+val1;
            String s ="Milk Shakes";
                String cost="30";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_milk_sMouseClicked

    private void f_juiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f_juiceMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Fruit Juice";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Fruit Juice .","South Indian",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            else
              {     
            qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
            int val1=val*25;
            amt=amt+val1;
            String s ="Fruit Juice";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        }} }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_f_juiceMouseClicked

    private void lassiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lassiMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Lassi";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }  if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Lassi .","South Indian",1));
              if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            else
              {
            qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
            int val1=val*20;
            amt=amt+val1;
             String s ="Lassi";
                String cost="20";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_lassiMouseClicked

    private void veg_juiceMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_veg_juiceMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Vegetable Juice";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }  if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Vegetable Juice .","South Indian",1));
             if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else
             {     
            qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
            int val1=val*30;
            amt=amt+val1;
            String s ="Vegetable juice";
                String cost="30";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_veg_juiceMouseClicked

    private void chaasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chaasMouseClicked
        try {
            // TODO add your handling code here:
            String itm="Chass";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty2=rs.getInt("qty");
               
            }  if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Chaas .","South Indian",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            else
               {
            qty2=qty2-val;
            String qtyup="update Fastfood set qty='"+qty2+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
            int val1=val*10;
            amt=amt+val1;
            String s ="Chaas";
                String cost="10";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        }}} catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_chaasMouseClicked

    private void rioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_rioMouseClicked
        try {
            // TODO add your handling code here:
           int qty=0;
            
            String itm="Rio";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
               
            }
            if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            else
             {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Rio .","South Indian",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else
               {
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
            
            
            int val1=val*25;
            amt=amt+val1;
            String s ="Rio";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
        } }}catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_rioMouseClicked

    private void lassiMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lassiMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_lassiMouseEntered

    private void misal_order4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_misal_order4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_misal_order4MouseClicked

    private void usal_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usal_orderMouseClicked
        // TODO add your handling code here:
        int qty=0;
        try
        {
            int x=25;
            String itm="Usal";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Usal.","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_usal_orderMouseClicked

    private void Poha_order1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Poha_order1MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_Poha_order1MouseClicked

    private void d_kachoriMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_d_kachoriMouseClicked
       
        int qty=0;
        
        
        try {
            // TODO add your handling code here:
            String itm="Dahi Kachori";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Dahi Kachori .","South Indian",1));
                if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            
          else  if(val>qty)
                JOptionPane.showMessageDialog(null,"Available quantity of Dahi Kachori is "+qty+" .","EZCanteen",2);
            
            else
               {
            
            
            
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*20;
            amt=amt+val1;
          
              String s ="Dahi Kachori";
                String cost="20";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
               }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_d_kachoriMouseClicked

    private void r_patticeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_r_patticeMouseClicked
       
        int qty=0;
        
        
        try {
            // TODO add your handling code here:
            String itm="Ragda Pattice";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Ragda Pattice .","South Indian",1));
               
            
            
            
            if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else   if(val>qty)
                JOptionPane.showMessageDialog(null,"Available quantity of Ragda Pattice is "+qty+" .","EZCanteen",2);
            
            else
               {
            
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*25;
            amt=amt+val1;
            String s ="Ragda Pattice";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
               }
        }} catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_r_patticeMouseClicked

    private void jLabel76MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel76MouseClicked
        int qty=0;
        
        
        try {
            // TODO add your handling code here:
            String itm="Veg. Sandwich";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
            
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Veg. Sandwich .","South Indian",1));
            
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
               else if(val>qty)
                JOptionPane.showMessageDialog(null,"Available quantity of Veg. Sandwich is "+qty+" .","EZCanteen",2);
            
            else
               {
            
            
            
            qty=qty-val;
            
            
            
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*30;
            amt=amt+val1;
            
              String s ="Veg. Sandwich";
                String cost="30";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
               }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_jLabel76MouseClicked

    private void b_butterMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_b_butterMouseClicked
       
        int qty=0;
        
        
        try {
            // TODO add your handling code here:
            String itm="Bread Butter";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Bread Butter .","South Indian",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
             else  if(val>qty)
                JOptionPane.showMessageDialog(null,"Available quantity of Bread Butter is "+qty+" .","EZCanteen",2);
            
            else
               {
            qty=qty-val;
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*20;
            amt=amt+val1;
            
            String s ="Bread Butter";
                String cost="20";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
               }
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_b_butterMouseClicked

    private void p_samosaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_samosaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_p_samosaMouseEntered

    private void p_samosaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_samosaMouseClicked
        
        int qty=0;
        
        try {
            // TODO add your handling code here:
            String itm="Punjabi Samosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Punjabi Samosa .","South Indian",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
               else if(val>qty)
                JOptionPane.showMessageDialog(null,"Available quantity of Punjabi Samosa is "+qty+" .","EZCanteen",2);
            
            else
            { 
            
            qty=qty-val;
            
            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute();
              setStatus();
            int val1=val*15;
            amt=amt+val1;
          
             String s ="Punjabi Samosa";
                String cost="15";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }   
        } }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_p_samosaMouseClicked

    private void usalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_usalMouseClicked

        int qty=0;

        try {
            // TODO add your handling code here:
            String itm="Usal";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Usal .","South Indian",1));
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            else if(val>qty)

            JOptionPane.showMessageDialog(null,"Available quantity for Usal is "+qty,"EZCanteen",2);
            else
            {
                qty=qty-val;
                String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
                ps=con.prepareStatement(qtyup);
                ps.execute();
                  setStatus();
                int val1=val*25;
                amt=amt+val1;
                
                  String s ="Usal";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
            } }catch (SQLException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

    }//GEN-LAST:event_usalMouseClicked

    private void misalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_misalMouseClicked
        try {
            // TODO add your handling code here:
            int qty=0;

            String itm="Misal";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            
            
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Misal .","South Indian",1));
            
               if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            
            else if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Misal is "+qty,"EZCanteen",2);

            else
            {

                qty=qty-val;
                String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
                ps=con.prepareStatement(qtyup);
                ps.execute();
  setStatus();
                int val1=val*30;
                amt=amt+val1;
               
                String s ="Misal";
                String cost="30";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
            } }catch (SQLException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_misalMouseClicked

    private void upmaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upmaMouseClicked
        try {
            // TODO add your handling code here:

            int qty=0;
            String itm="Upma";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
              if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Upma .","South Indian",1));
           
             if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else if(qty<val)
            JOptionPane.showMessageDialog(null,"The available quantity of Upma is "+qty,"EZCanteen",2);
            else
            {
                qty=qty-val;
                String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
                ps=con.prepareStatement(qtyup);
                ps.execute();
                  setStatus();
                int val1=val*25;
                amt=amt+val1;
                
                String s ="Upma";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
                
            } }catch (SQLException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_upmaMouseClicked

    private void pohaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pohaMouseClicked
        try {
            // TODO add your handling code here:
            //code for getting the quantity in a variable qty
            int qty=0;

            String itm="Poha";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");

            }
            
  if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Sada Poha .","South Indian",1));
            
            if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
            
            else if(val>qty)
            JOptionPane.showMessageDialog(null,"Available quantity for Poha is "+qty,"EZCanteen",2);
            else
            {
                qty=qty-val;
                String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
                ps=con.prepareStatement(qtyup);
                ps.execute();
                  setStatus();
                int val1=val*25;

                amt=amt+val1;
               
                String s ="Poha";
                String cost="25";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                 else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
            }
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_pohaMouseClicked

    private void potato_vadaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_potato_vadaMouseClicked
        try {

            //code for getting the quantity of the item in a 'qty' variable;
            int qty=0;

            String itm="Potato Vada";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery();
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            //do this for every item...
  if((main1.getText().equals("")==false)&&(main2.getText().equals("")==false)&&(main3.getText().equals("")==false)&&(main4.getText().equals("")==false)&&(main5.getText().equals("")==false)&&(main6.getText().equals("")==false))
          {
               JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
          }
            
            else
           {
            
            
            
            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity for Potato Vada .","Fast Food",1));
          
            if(val<=0)
                JOptionPane.showMessageDialog(null,"Ordered quantity should be a positive value","EZCanteen",2); 
           
           else if(val>qty)
            JOptionPane.showMessageDialog(null," Available  quantity for Potato Vada :"+qty,"EZCanteen",2);

            else
            {
                int sub = qty -val;
                qty=qty-val;
                String qtyup="update Fastfood set qty='"+sub+"' where items='"+itm+"'";
                ps=con.prepareStatement(qtyup);
                ps.execute();
                setStatus();
                int val1=val*10;
                amt=amt+val1;
                //String s ="Potato Vada            10          "+val+"             "+val1;
                
                String s ="Potato Vada";
                String cost="10";
                String plates=""+val;
                String total=""+val1;
                
                if(main1.getText().isEmpty())
                {main1.setText(s);
                c1.setText(cost);
                p01.setText(plates);
                t1.setText(total);
                }
                else if (main2.getText().isEmpty())
                {
                main2.setText(s);
                 c2.setText(cost);
                p2.setText(plates);
                t2.setText(total);
                }
                else if (main3.getText().isEmpty())
                {
                    main3.setText(s);
                     c3.setText(cost);
                p3.setText(plates);
                t3.setText(total);
                }
                 else if (main4.getText().isEmpty())
                 {
                        main4.setText(s);
                         c4.setText(cost);
                p4.setText(plates);
                t4.setText(total);
                  }
                  else if (main5.getText().isEmpty())
                  {
                            main5.setText(s);
                             c5.setText(cost);
                p5.setText(plates);
                t5.setText(total);
                  }
               else if (main6.getText().isEmpty())
               {
                    main6.setText(s);
                     c6.setText(cost);
                p6.setText(plates);
                t6.setText(total);
               } 
                else
               {
                   JOptionPane.showMessageDialog(null,"Sorry you can only order 6 different items at a time .","Order items",2);
               }
            }
            }
        }catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_potato_vadaMouseClicked

    
    void printbill(String item,int val,int plates)
    {
             try
             {
                String item_name=item;
                int value=val;
                int nop=plates;
                jTextArea1.setText("\n\t\tEZCanteen Order :-");
             
                jTextArea1.setText(jTextArea1.getText()+"\n\n\t Item                     cost         plate \n\n\t"+item_name+"\t      "+value+"\t"+nop);
               
                
                MessageFormat header = new MessageFormat("ORDER");
                
                MessageFormat footer = new MessageFormat("No{0,number,integer}");
                     jTextArea1.print(header,footer);
                
                
                JOptionPane.showMessageDialog(null,"Order printed succesfully","EZCanteen",1);
             }catch (PrinterException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
             }
                   finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }       
    
    
    private void pvada_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pvada_orderMouseClicked
        // TODO add your handling code here:

        //this event should be  used only when the state of item is critical or unavailable or the item has high demand
        int qty=0;
        try
        {
            int x=10;
            String itm="Potato Vada";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Potato Vada .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
            
      
            
            
            
            
            
            
            
            
            
            
            
            
            
            

        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

    }//GEN-LAST:event_pvada_orderMouseClicked

    private void upma_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upma_orderMouseClicked
        // TODO add your handling code here:
        int qty=0;
        try
        {
            int x=25;
            String itm="Upma";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Upma.","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                

        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

    }//GEN-LAST:event_upma_orderMouseClicked

    private void Poha_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Poha_orderMouseClicked
        // TODO add your handling code here:
        int qty=0;
        try
        {
            int x=25;
            String itm="Poha";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Poha.","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database
            
            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_Poha_orderMouseClicked

    private void misal_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_misal_orderMouseClicked
        // TODO add your handling code here:
        int qty=0;
        try
        {
            int x=30;
            String itm="Misal";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Misal.","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_misal_orderMouseClicked

    private void samosa_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_samosa_orderMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=15;
            String itm="Punjabi Samosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Punjabi Samosa.","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
    
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_samosa_orderMouseClicked

    private void bre_buttorderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bre_buttorderMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=20;
            String itm="Bread Butter";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Bread Butter"
                    + ".","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database
            
            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_bre_buttorderMouseClicked

    private void sandwich_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sandwich_orderMouseClicked
            int qty=0;
        try
        {
            int x=30;
            String itm="Veg. Sandwich";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Veg.Sandwich.","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
              
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
        
    }//GEN-LAST:event_sandwich_orderMouseClicked

    private void ragda_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ragda_orderMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=25;
            String itm="Ragda Pattice";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Ragda Pattice.","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
    }//GEN-LAST:event_ragda_orderMouseClicked

    private void kachhori_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_kachhori_orderMouseClicked
        
             int qty=0;
        try
        {
            int x=20;
            String itm="Dahi Kachori";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Dahi Kachori","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
        
    }//GEN-LAST:event_kachhori_orderMouseClicked

    private void sada_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sada_ordMouseClicked
        // TODO add your handling code here:
          int qty=0;
        try
        {
               int x=20;
            String itm="Sada Dosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Sada Dosa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
    
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_sada_ordMouseClicked

    private void ra_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ra_ordMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=25;
            String itm="Rava Dosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Rava Dosa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
    }//GEN-LAST:event_ra_ordMouseClicked

    private void ma_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ma_ordMouseClicked
        // TODO add your handling code here:
          int qty=0;
        try
        {
            int x=25;
            String itm="Masala Dosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Masala Dosa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
    }//GEN-LAST:event_ma_ordMouseClicked

    private void sa_uthordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sa_uthordMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=20;
            String itm="Sada Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Sada Uthappa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_sa_uthordMouseClicked

    private void on_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_on_ordMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=30;
            String itm="Onion Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Onion Uthappa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
              
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
    }//GEN-LAST:event_on_ordMouseClicked

    private void mi_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mi_ordMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=20;
            String itm="Mini Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Mini Uthappa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_mi_ordMouseClicked

    private void co_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_co_ordMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=35;
            String itm="Coconut Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Coconut Uthappa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
              
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_co_ordMouseClicked

    private void pa_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pa_ordMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=30;
            String itm="Palak Dosa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Palak Dosa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
    }//GEN-LAST:event_pa_ordMouseClicked

    private void chil_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chil_ordMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {
            int x=35;
            String itm="Chilly Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Chilly Uthappa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_chil_ordMouseClicked

    private void nod_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nod_ordMouseClicked
        // TODO add your handling code here:
             int qty=0;
        try
        {   
            int x=35;
            String itm="Noodle Uthappa";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Noodle Uthappa .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
              
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_nod_ordMouseClicked

    private void f_riceorderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_f_riceorderMouseClicked
        // TODO add your handling code here:
            int qty=0;
        try
        {
            int x=25;
            String itm="Veg. Fried Rice";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Veg. Fried Rice .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
        
        
    }//GEN-LAST:event_f_riceorderMouseClicked

    private void nood_orderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_nood_orderMouseClicked
        // TODO add your handling code here:
            int qty=0;
        try
        {
            int x=25;
            String itm="Hakka Noodles";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Hakka Noodles .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
    }//GEN-LAST:event_nood_orderMouseClicked

    private void manch_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_manch_ordMouseClicked
        // TODO add your handling code here:
            int qty=0;
        try
        {
            int x=35;
            String itm="Veg. Manchurian";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Veg. Manchurian .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
   
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_manch_ordMouseClicked

    private void sada_ord4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sada_ord4MouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_sada_ord4MouseClicked

    private void mancho_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mancho_ordMouseClicked
        // TODO add your handling code here:
        
               int qty=0;
        try
        {
            int x=40;
            String itm="Manchow Soup";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Manchow Soup .","Fast Food",1));
          
            
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
        
        
    }//GEN-LAST:event_mancho_ordMouseClicked

    private void schz_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schz_ordMouseClicked
        // TODO add your handling code here:
            int qty=0;
        try
        {
               int x=30;
            String itm="Schezwan Rice";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Schezwan Rice .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_schz_ordMouseClicked

    private void schznood_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_schznood_ordMouseClicked
        // TODO add your handling code here:
            int qty=0;
        try
        {
            int x=35;
            String itm="Schezwan Noodles";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Schezwan Noodles .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

    }//GEN-LAST:event_schznood_ordMouseClicked

    private void pbhaji_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pbhaji_ordMouseClicked
        // TODO add your handling code here:
        
            int qty=0;
        try
        {
           int x=25;
            String itm="Puri Bhaji";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Puri Bhaji .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
    }//GEN-LAST:event_pbhaji_ordMouseClicked

    private void chin_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chin_ordMouseClicked
        // TODO add your handling code here:
            int qty=0;
        try
        {
            int x=50;
            String itm="Chinese Lunch";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Chinese Lunch .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
    }//GEN-LAST:event_chin_ordMouseClicked

    private void chana_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chana_ordMouseClicked
        // TODO add your handling code here:
            int qty=0;
        try
        {
            int x=20;
            String itm="Chana Masala";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Chana Masala .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
                
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
    }//GEN-LAST:event_chana_ordMouseClicked

    private void sp_ordMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sp_ordMouseClicked
        // TODO add your handling code here:
            int qty=0;
        try
        {   
            int x=45;
            String itm="Special Lunch";
            String qtysql="select qty from FastFood where items='"+itm+"' ";
            ps=con.prepareStatement(qtysql);
            rs=ps.executeQuery(); //retrieving the current quantity of the item
            if(rs.next())
            {
                qty=rs.getInt("qty");
                //System.out.print(qty);
            }//query to retrieve the qty

            val=Integer.parseInt(JOptionPane.showInputDialog(null,"Enter the quantity to be ordered for Special Lunch .","Fast Food",1));
            qty=qty+val; //accepting and adding the new with the current quantity

            String qtyup="update Fastfood set qty='"+qty+"' where items='"+itm+"'";
            ps=con.prepareStatement(qtyup);
            ps.execute(); //updating the quantity in the database

            setStatus();//setting the status
               
        } catch (SQLException ex) {
            Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
              finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }

        
        
    }//GEN-LAST:event_sp_ordMouseClicked

    private void card_noKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_card_noKeyPressed
        // TODO add your handling code here:
          if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
                    if((card_no.getText().equals("")))
                {
                    JOptionPane.showMessageDialog(null,"Please enter all the required fields .","Recharge Account",2);
                }
        //if it does not match condition
        //JOptionPane.showMessageDialog(null,"Such account does not exist .","Recharge Account ",0);
        else if(card_no.getText().length()<4)
        {
            JOptionPane.showMessageDialog(null,"Card number entered is invalid .","Recharge Account",2);
        }
        else
        {
                try {
                    String sql="select Name,Balance from s_details where Lcard_No=?";
                    ps=con.prepareStatement(sql);
                    ps.setString(1, card_no.getText());
                    rs=ps.executeQuery();
                    if(rs.next())
                    {
                        String c_bal= rs.getString("Balance");
                        String name=rs.getString("Name");
                        current_bal.setText(c_bal);
                        name2.setText(name);
                    }
                    //query to retrieve his current balance in the text field given below
                } catch (SQLException ex) {
                    Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
                }
                      finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
            
        }
        }
    }//GEN-LAST:event_card_noKeyPressed

    private void lib_CardKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_lib_CardKeyPressed
        // TODO add your handling code here:
         // TODO add your handling code here:
          if(evt.getKeyCode()==KeyEvent.VK_ENTER)
        {
           if((lib_Card.getText().equals(""))||(name3.getText().equals("")))
           
         JOptionPane.showMessageDialog(null,"Please enter the required details","EZCanteen",2);
            
        else
        {
               
            try {
                //code to submit the card number and retrieve the balance in the next text box
                String sql="select Name,Balance from s_details where Lcard_No=?";
                ps=con.prepareStatement(sql);
                ps.setString(1, lib_Card.getText());
                rs=ps.executeQuery();
                if(rs.next())
                {
                    String c_bal= rs.getString("Balance");
                    String nam=rs.getString("Name");
                    
                    curr_bal.setText(c_bal);
                    name3.setText(nam);
                }
                else
                {
                    JOptionPane.showMessageDialog(null,"Invalid name or card number ","EZCanteen",2);
                }
            } catch (SQLException ex) {
                Logger.getLogger(MainGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
                  finally{
             try
             {
                 rs.close();
                 ps.close();
             }
             catch(Exception e){}
             
         }
        }
           
        }
    }//GEN-LAST:event_lib_CardKeyPressed

    private void upmaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upmaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_upmaMouseEntered

    private void h_noodlesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_h_noodlesMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_h_noodlesMouseEntered

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Base;
    private javax.swing.JLabel Confirm_bal;
    private javax.swing.JPanel Create_Acc;
    private javax.swing.JPanel Deduct_amt;
    private javax.swing.JPanel Delete_Acc;
    private javax.swing.JLabel Main_menu;
    private javax.swing.JTabbedPane Menu;
    private javax.swing.JLabel Poha_order;
    private javax.swing.JLabel Poha_order1;
    private javax.swing.JLabel Recharge;
    private javax.swing.JPanel Recharge_Acc;
    private javax.swing.JPanel SidePanel;
    private javax.swing.JPanel South_indian;
    private javax.swing.JRadioButton Student;
    private javax.swing.JLabel abc;
    private javax.swing.JLabel acc_create;
    private javax.swing.JLabel acc_sett;
    private javax.swing.JPanel acc_settings;
    private javax.swing.JLabel b_butter;
    private javax.swing.JLabel back;
    private javax.swing.JPanel beverages;
    private javax.swing.JTextField bill_ge;
    private javax.swing.JTextField bill_gen;
    private javax.swing.JPanel billboard;
    private javax.swing.JLabel bre_but;
    private javax.swing.JLabel bre_buttorder;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JLabel c1;
    private javax.swing.JLabel c2;
    private javax.swing.JLabel c3;
    private javax.swing.JLabel c4;
    private javax.swing.JLabel c5;
    private javax.swing.JLabel c6;
    private javax.swing.JLabel c_drinks;
    private javax.swing.JLabel c_lunch;
    private javax.swing.JLabel c_m;
    private javax.swing.JTextField card_no;
    private javax.swing.JTextField card_num;
    private javax.swing.JTextField card_number;
    private javax.swing.JLabel chaas;
    private javax.swing.JLabel chana;
    private javax.swing.JLabel chana_ord;
    private javax.swing.JLabel chi_uth;
    private javax.swing.JLabel chil_ord;
    private javax.swing.JLabel chilly_uth;
    private javax.swing.JLabel chin_ord;
    private javax.swing.JPanel chinese_lunch;
    private javax.swing.JLabel clear;
    private javax.swing.JLabel close1;
    private javax.swing.JLabel co_ord;
    private javax.swing.JLabel co_uth;
    private javax.swing.JLabel coco_uth;
    private javax.swing.JLabel coffee;
    private javax.swing.JLabel create;
    private javax.swing.JTextField curr_bal;
    private javax.swing.JTextField current_bal;
    private javax.swing.JLabel d_kachori;
    private javax.swing.JLabel dahi;
    private javax.swing.JLabel deduct;
    private javax.swing.JLabel del_acc;
    private javax.swing.JLabel del_mul;
    private javax.swing.JLabel delete;
    private javax.swing.JComboBox department;
    private javax.swing.JComboBox deposit;
    private javax.swing.JLabel f_juice;
    private javax.swing.JLabel f_rice;
    private javax.swing.JLabel f_riceorder;
    private javax.swing.JPanel fast_food;
    private javax.swing.JTextField fin_bal;
    private javax.swing.JLabel g_total;
    private javax.swing.JLabel gen_bill;
    private javax.swing.JLabel go;
    private javax.swing.JLabel h_choc;
    private javax.swing.JLabel h_noodles;
    private javax.swing.JDialog jDialog1;
    private javax.swing.JDialog jDialog2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel100;
    private javax.swing.JLabel jLabel101;
    private javax.swing.JLabel jLabel102;
    private javax.swing.JLabel jLabel103;
    private javax.swing.JLabel jLabel104;
    private javax.swing.JLabel jLabel105;
    private javax.swing.JLabel jLabel106;
    private javax.swing.JLabel jLabel107;
    private javax.swing.JLabel jLabel108;
    private javax.swing.JLabel jLabel109;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel110;
    private javax.swing.JLabel jLabel111;
    private javax.swing.JLabel jLabel112;
    private javax.swing.JLabel jLabel113;
    private javax.swing.JLabel jLabel114;
    private javax.swing.JLabel jLabel115;
    private javax.swing.JLabel jLabel116;
    private javax.swing.JLabel jLabel117;
    private javax.swing.JLabel jLabel118;
    private javax.swing.JLabel jLabel119;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel121;
    private javax.swing.JLabel jLabel122;
    private javax.swing.JLabel jLabel123;
    private javax.swing.JLabel jLabel125;
    private javax.swing.JLabel jLabel126;
    private javax.swing.JLabel jLabel127;
    private javax.swing.JLabel jLabel128;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel131;
    private javax.swing.JLabel jLabel132;
    private javax.swing.JLabel jLabel133;
    private javax.swing.JLabel jLabel134;
    private javax.swing.JLabel jLabel135;
    private javax.swing.JLabel jLabel136;
    private javax.swing.JLabel jLabel137;
    private javax.swing.JLabel jLabel138;
    private javax.swing.JLabel jLabel139;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel140;
    private javax.swing.JLabel jLabel141;
    private javax.swing.JLabel jLabel142;
    private javax.swing.JLabel jLabel143;
    private javax.swing.JLabel jLabel144;
    private javax.swing.JLabel jLabel145;
    private javax.swing.JLabel jLabel146;
    private javax.swing.JLabel jLabel147;
    private javax.swing.JLabel jLabel148;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel155;
    private javax.swing.JLabel jLabel157;
    private javax.swing.JLabel jLabel159;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel160;
    private javax.swing.JLabel jLabel162;
    private javax.swing.JLabel jLabel164;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel39;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel45;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel51;
    private javax.swing.JLabel jLabel52;
    private javax.swing.JLabel jLabel53;
    private javax.swing.JLabel jLabel54;
    private javax.swing.JLabel jLabel55;
    private javax.swing.JLabel jLabel56;
    private javax.swing.JLabel jLabel57;
    private javax.swing.JLabel jLabel58;
    private javax.swing.JLabel jLabel59;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel60;
    private javax.swing.JLabel jLabel61;
    private javax.swing.JLabel jLabel62;
    private javax.swing.JLabel jLabel63;
    private javax.swing.JLabel jLabel64;
    private javax.swing.JLabel jLabel65;
    private javax.swing.JLabel jLabel66;
    private javax.swing.JLabel jLabel67;
    private javax.swing.JLabel jLabel68;
    private javax.swing.JLabel jLabel69;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel70;
    private javax.swing.JLabel jLabel71;
    private javax.swing.JLabel jLabel72;
    private javax.swing.JLabel jLabel73;
    private javax.swing.JLabel jLabel74;
    private javax.swing.JLabel jLabel75;
    private javax.swing.JLabel jLabel76;
    private javax.swing.JLabel jLabel77;
    private javax.swing.JLabel jLabel78;
    private javax.swing.JLabel jLabel79;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel80;
    private javax.swing.JLabel jLabel81;
    private javax.swing.JLabel jLabel82;
    private javax.swing.JLabel jLabel83;
    private javax.swing.JLabel jLabel84;
    private javax.swing.JLabel jLabel85;
    private javax.swing.JLabel jLabel86;
    private javax.swing.JLabel jLabel87;
    private javax.swing.JLabel jLabel88;
    private javax.swing.JLabel jLabel89;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel jLabel90;
    private javax.swing.JLabel jLabel91;
    private javax.swing.JLabel jLabel92;
    private javax.swing.JLabel jLabel93;
    private javax.swing.JLabel jLabel94;
    private javax.swing.JLabel jLabel95;
    private javax.swing.JLabel jLabel96;
    private javax.swing.JLabel jLabel97;
    private javax.swing.JLabel jLabel98;
    private javax.swing.JLabel jLabel99;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JLabel kachhori_order;
    private javax.swing.JLabel label2;
    private javax.swing.JLabel lassi;
    private javax.swing.JTextField lib_Card;
    private javax.swing.JLabel logout;
    private javax.swing.JLabel lunch;
    private javax.swing.JLabel ma_ord;
    private javax.swing.JLabel main1;
    private javax.swing.JLabel main2;
    private javax.swing.JLabel main3;
    private javax.swing.JLabel main4;
    private javax.swing.JLabel main5;
    private javax.swing.JLabel main6;
    private javax.swing.JLabel man;
    private javax.swing.JLabel man_soup;
    private javax.swing.JLabel manch;
    private javax.swing.JLabel manch_ord;
    private javax.swing.JLabel mancho_ord;
    private javax.swing.JLabel manchurian;
    private javax.swing.JLabel masa_dosa;
    private javax.swing.JLabel masala_dosa;
    private javax.swing.JLabel mi_ord;
    private javax.swing.JLabel mi_sal;
    private javax.swing.JLabel mi_sal1;
    private javax.swing.JLabel mi_uth;
    private javax.swing.JLabel milk_s;
    private javax.swing.JLabel mini;
    private javax.swing.JLabel mini_uth;
    private javax.swing.JLabel misal;
    private javax.swing.JLabel misal_order;
    private javax.swing.JLabel misal_order4;
    private javax.swing.JTextField name;
    private javax.swing.JTextField name1;
    private javax.swing.JTextField name2;
    private javax.swing.JTextField name3;
    private javax.swing.JTextField new_bal;
    private javax.swing.JLabel nod_ord;
    private javax.swing.JLabel nod_uth;
    private javax.swing.JLabel nood_order;
    private javax.swing.JLabel nood_uth;
    private javax.swing.JLabel noodles;
    private javax.swing.JLabel on_ord;
    private javax.swing.JLabel on_uth;
    private javax.swing.JLabel onio_uth;
    private javax.swing.JLabel p01;
    private javax.swing.JLabel p1;
    private javax.swing.JLabel p2;
    private javax.swing.JLabel p3;
    private javax.swing.JLabel p4;
    private javax.swing.JLabel p5;
    private javax.swing.JLabel p6;
    private javax.swing.JLabel p_samosa;
    private javax.swing.JLabel p_vada;
    private javax.swing.JLabel pa_ord;
    private javax.swing.JLabel pa_uth;
    private javax.swing.JLabel palak_dosa;
    private javax.swing.JLabel pbhaji_ord;
    private javax.swing.JLabel po_ha;
    private javax.swing.JLabel poha;
    private javax.swing.JLabel potato_vada;
    private javax.swing.JLabel print;
    private javax.swing.JLabel pur_bhaj;
    private javax.swing.JLabel puri;
    private javax.swing.JLabel pvada_order;
    private javax.swing.JLabel r_pattice;
    private javax.swing.JLabel ra_dosa;
    private javax.swing.JLabel ra_ord;
    private javax.swing.JLabel ragda;
    private javax.swing.JLabel ragda_order;
    private javax.swing.JLabel rava_dosa;
    private javax.swing.JComboBox rec_amt;
    private javax.swing.JLabel rice;
    private javax.swing.JLabel rio;
    private javax.swing.JLabel sa_dosa;
    private javax.swing.JLabel sa_mosa;
    private javax.swing.JLabel sa_uth;
    private javax.swing.JLabel sa_uthord;
    private javax.swing.JLabel sada_dosa;
    private javax.swing.JLabel sada_ord;
    private javax.swing.JLabel sada_ord4;
    private javax.swing.JLabel sada_uth;
    private javax.swing.JLabel samosa_order;
    private javax.swing.JLabel sandwich;
    private javax.swing.JLabel sandwich_order;
    private javax.swing.JLabel schz;
    private javax.swing.JLabel schz_nod;
    private javax.swing.JLabel schz_noodles;
    private javax.swing.JLabel schz_ord;
    private javax.swing.JLabel schz_rice;
    private javax.swing.JLabel schznood_ord;
    private javax.swing.JLabel sp_lunch;
    private javax.swing.JLabel sp_ord;
    private javax.swing.JLabel spl_lunch;
    private javax.swing.JRadioButton staff;
    private javax.swing.JLabel submit;
    private javax.swing.JLabel t1;
    private javax.swing.JLabel t2;
    private javax.swing.JLabel t3;
    private javax.swing.JLabel t4;
    private javax.swing.JLabel t5;
    private javax.swing.JLabel t6;
    private javax.swing.JLabel tea;
    private javax.swing.JLabel u_sal;
    private javax.swing.JLabel up_ma;
    private javax.swing.JLabel upma;
    private javax.swing.JLabel upma_order;
    private javax.swing.JLabel upma_order1;
    private javax.swing.JLabel usal;
    private javax.swing.JLabel usal_order;
    private javax.swing.JLabel veg_juice;
    private javax.swing.JComboBox year;
    private javax.swing.JComboBox year1;
    // End of variables declaration//GEN-END:variables
}
